{"version":3,"file":"default-projects_n-tire-biz-app_src_app_pages_forms_mstjobrequirement_mstjobrequirement_compo-b12bcb.js","mappings":"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","sources":["./projects/n-tire-biz-app/src/app/pages/forms/mstjobrequirement/mstjobrequirement.component.ts","./projects/n-tire-biz-app/src/app/service/mstjobrequirement.service.ts","./projects/n-tire-biz-app/src/app/pages/forms/mstjobrequirement/mstjobrequirement.component.html"],"sourcesContent":["import { mstjobrequirementService } from './../../../service/mstjobrequirement.service';\r\nimport { mstjobrequirement } from './../../../model/mstjobrequirement.model';\r\nimport { ElementRef, Component, OnInit, Inject, Optional, ViewChild, EventEmitter } from '@angular/core';\r\nimport { ToastService } from '../../../../../../n-tire-biz-app/src/app/pages/core/services/toast.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { DomSanitizer, SafeHtml } from \"@angular/platform-browser\";\r\n//Dropdown - nvarchar(5) - Backoffice -> Fixed Values menu\r\n\r\n//Custom error functions\r\nimport { KeyValuePair, MustMatch, DateCompare, MustEnable, MustDisable, Time } from '../../../../../../n-tire-biz-app/src/app/shared/general.validator';\r\n\r\n//child table\r\nimport { SmartTableDatepickerComponent, SmartTableDatepickerRenderComponent } from '../../../../../../n-tire-biz-app/src/app/custom/smart-table-datepicker.component';\r\nimport { SmartTablepopupselectComponent, SmartTablepopupselectRenderComponent } from '../../../../../../n-tire-biz-app/src/app/custom/smart-table-popupselect.component';\r\nimport { SmartTableFileRenderComponent } from '../../../../../../n-tire-biz-app/src/app/custom/smart-table-filerender.component';\r\n\r\n//Custom control\r\nimport { durationComponent } from '../../../../../../n-tire-biz-app/src/app/custom/duration.component';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { Ng2SmartTableComponent } from 'ng2-smart-table';\r\nimport { NgbDateParserFormatter, NgbDatepickerConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ShortcutInput, ShortcutEventOutput } from \"ng-keyboard-shortcuts\";\r\n//Shortcuts\r\nimport { KeyboardShortcutsService } from \"ng-keyboard-shortcuts\";\r\n//translator\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n//FK field services\r\n//detail table services\r\nimport { mstjobstatus } from './../../../model/mstjobstatus.model';\r\nimport { mstjobstatusComponent } from './../../../pages/forms/mstjobstatus/mstjobstatus.component';\r\nimport { mstjobstatusService } from './../../../service/mstjobstatus.service';\r\nimport { switchMap, map, debounceTime } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, EmailValidator, ValidationErrors } from '@angular/forms';\r\n//primeng services\r\nimport { DynamicDialogRef } from 'primeng/dynamicDialog';\r\nimport { DynamicDialogConfig } from 'primeng/dynamicDialog';\r\nimport { FileUploadModule, FileUpload } from 'primeng/fileupload';\r\nimport { DialogService } from 'primeng/dynamicDialog';\r\n//session,application constants\r\nimport { SharedService } from '../../../../../../n-tire-biz-app/src/app/service/shared.service';\r\nimport { SessionService } from '../../../../../../n-tire-biz-app/src/app/pages/core/services/session.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ThemeService } from '../../../../../../n-tire-biz-app/src/app/pages/core/services/theme.service';\r\n//custom fields & attachments\r\nimport { AppConstants, DropDownValues } from '../../../../../../n-tire-biz-app/src/app/shared/helper';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { WebcamImage, WebcamInitError, WebcamUtil } from 'ngx-webcam';\r\nimport { createWorker, RecognizeResult } from 'tesseract.js';\r\nimport { AttachmentComponent } from '../../../../../../n-tire-biz-app/src/app/custom/attachment/attachment.component';\r\n\r\n@Component({\r\n    selector: 'app-mstjobrequirement',\r\n    templateUrl: './mstjobrequirement.component.html',\r\n    styles: [`\r\n    @media only screen and (max-width: 600px) {\r\n      .education_view_mobile{\r\n          min-width: 100% !important;\r\n          margin: 0px !important;\r\n        }\r\n        .job_re_btn{\r\n          padding: 4px 6px !important;\r\n          white-space: nowrap !important;\r\n        }\r\n        .mobile_view_btn{\r\n          display: none !important;\r\n        }\r\n    }\r\n    `],\r\n    providers: [KeyboardShortcutsService]\r\n})\r\n\r\n\r\n\r\nexport class mstjobrequirementComponent implements OnInit {\r\n    formData: mstjobrequirement;\r\n    list: mstjobrequirement[];\r\n    bmyrecord: boolean = false;\r\n    hidelist: any = [];\r\n    objvalues: any = [];\r\n    viewHtml: any = '';//stores html view of the screen\r\n    showview: boolean = false;//view or edit mode\r\n    theme: string = \"\";//current theme\r\n    //formdata: any;//current form data\r\n    shortcuts: ShortcutInput[] = [];//keyboard keys\r\n    showSubmit: boolean = true;//button to show\r\n    showGoWorkFlow: boolean = false;\r\n    pkList: any;//stores values - used in search, prev, next\r\n    pkoptionsEvent: EventEmitter<any> = new EventEmitter<any>();//autocomplete of pk\r\n    toolbarVisible: boolean = true;\r\n    customFieldServiceList: any;\r\n    CustomFormName: string = \"\";\r\n    CustomFormField: string = \"\";\r\n    CustomFormFieldValue: string = \"\";\r\n    p_menuid: any;\r\n    p_currenturl: any;\r\n    isSubmitted: boolean = false;\r\n    ShowTableslist: string[] = [];\r\n    data: any;\r\n    maindata: any;\r\n\r\n    bfilterPopulate_mstjobrequirements: boolean = false;\r\n    bfilterPopulate_mstjobstatuses: boolean = false;\r\n    mstjobrequirement_menuactions: any = []\r\n    mstjobstatus_menuactions: any = []\r\n    @ViewChild('tbl_mstjobstatuses', { static: false }) tbl_mstjobstatuses: Ng2SmartTableComponent;\r\n\r\n    mstjobrequirement_Form: FormGroup;\r\n\r\n    locations_List: any[];\r\n    skills_List: any[];\r\n    education_List: any[];\r\n    language_List: any[];\r\n\r\n    skills_results: DropDownValues[];\r\n    locations_results: DropDownValues[];\r\n    education_results: DropDownValues[];\r\n    language_results: DropDownValues[];\r\n    private exportTime = { hour: 7, minute: 15, meriden: 'PM', format: 24 };\r\n    showFormType: any;\r\n    formid: any;\r\n    pkcol: any;\r\n    readonly AttachmentURL = AppConstants.AttachmentURL;\r\n    readonly URL = AppConstants.UploadURL; attachmentlist: any[] = []; fileAttachmentList: any[] = [];\r\n    @ViewChild('fileattachment', { static: false }) fileattachment: AttachmentComponent;\r\n    attachmentFieldJson: any[] = [];\r\n    attachmentVisible: boolean = true;\r\n    SESSIONUSERID: any;//current user\r\n\r\n    sessionData: any;\r\n    sourceKey: any;\r\n\r\n    userrole:any;\r\n    showApplicantmenu: boolean = false;\r\n    showAdminMenuaccess: boolean = false;\r\n    showCorporateMenuaccess: boolean = false;\r\n\r\n\r\n    mstjobstatuses_visiblelist: any;\r\n    mstjobstatuses_hidelist: any;\r\n\r\n    Deleted_mstjobstatus_IDs: string = \"\";\r\n    mstjobstatuses_ID: string = \"1\";\r\n    mstjobstatuses_selectedindex: any;\r\n    minDate = undefined;\r\n\r\n    showloc: boolean = true;\r\n    showskill: boolean = true;\r\n    showedu: boolean = true;\r\n    showlan: boolean = true;\r\n    mstjobrequirement: any;\r\n\r\n    constructor(\r\n        private nav: Location,\r\n        private translate: TranslateService,\r\n        private keyboard: KeyboardShortcutsService, private router: Router,\r\n        private themeService: ThemeService,\r\n        private ngbDateParserFormatter: NgbDateParserFormatter,\r\n        public dialogRef: DynamicDialogRef,\r\n        public dynamicconfig: DynamicDialogConfig,\r\n        public dialog: DialogService,\r\n        private mstjobrequirement_service: mstjobrequirementService,\r\n        private mstjobstatus_service: mstjobstatusService,\r\n        private fb: FormBuilder,\r\n        private sharedService: SharedService,\r\n        private sessionService: SessionService,\r\n        private toastr: ToastService,\r\n        private sanitizer: DomSanitizer, private config: NgbDatepickerConfig,\r\n        private currentRoute: ActivatedRoute, private spinner: NgxSpinnerService) {\r\n        const current = new Date();\r\n        this.minDate = {\r\n            year: current.getFullYear(),\r\n            month: current.getMonth() + 1,\r\n            day: current.getDate()\r\n        };\r\n        this.translate = this.sharedService.translate;\r\n        this.data = dynamicconfig;\r\n        this.p_menuid = sharedService.menuid;\r\n        this.p_currenturl = sharedService.currenturl;\r\n        this.keyboard.add([\r\n            {\r\n                key: 'cmd l',\r\n                command: () => this.router.navigate([\"/home/\" + this.p_currenturl]),\r\n                preventDefault: true\r\n            },\r\n            {\r\n                key: 'cmd s',\r\n                command: () => this.onSubmitData(false),\r\n                preventDefault: true\r\n            },\r\n            {\r\n                key: 'cmd f',\r\n                command: () => this.resetForm(),\r\n                preventDefault: true\r\n            }\r\n        ]);\r\n        this.mstjobrequirement_Form = this.fb.group({\r\n            pk: [null],\r\n            ImageName: [null],\r\n            jobid: [null],\r\n            corporateid: [null],\r\n            jobdescription: [null, Validators.compose([Validators.required])],\r\n            jobrequirement: [null, Validators.compose([Validators.required])],\r\n            numberofpositions: [null, Validators.compose([Validators.required])],\r\n            tobefilledbefore: [null],\r\n            experiencefrom: [null],\r\n            experienceto: [null],\r\n            locations: [null],\r\n            skills: [null],\r\n            education: [null],\r\n            language: [null],\r\n            referenceavailability: [null],\r\n            referencevalidation: [null],\r\n            attachment: [null],\r\n            status: [null],\r\n            statusdesc: [null],\r\n        });\r\n    }\r\n\r\n    get f() { return this.mstjobrequirement_Form.controls; }\r\n\r\n\r\n    //when child screens are clicked - it will be made invisible\r\n    ToolBar(prop) {\r\n        this.toolbarVisible = prop;\r\n    }\r\n\r\n    //function called when we navigate to other page.defined in routing\r\n    canDeactivate(): Observable<boolean> | boolean {\r\n        debugger;\r\n        if (this.mstjobrequirement_Form.dirty && this.mstjobrequirement_Form.touched) {\r\n            if (confirm('Do you want to exit the page?')) {\r\n                return Observable.of(true).delay(1000);\r\n            } else {\r\n                return Observable.of(false);\r\n            }\r\n        }\r\n        return Observable.of(true);\r\n    }\r\n\r\n    //check Unique fields\r\n\r\n    //navigation buttons\r\n    first() {\r\n        if (this.pkList.length > 0) this.PopulateScreen(this.pkList[0].pkcol);\r\n    }\r\n\r\n    last() {\r\n        if (this.pkList.length > 0) this.PopulateScreen(this.pkList[this.pkList.length - 1].pkcol);\r\n    }\r\n\r\n    prev() {\r\n        debugger;\r\n        let pos = this.pkList.map(function (e: any) { return e.jobid.toString(); }).indexOf(this.formid.toString());\r\n        if (pos > 0) this.PopulateScreen(this.pkList[pos - 1].pkcol);\r\n    }\r\n\r\n    next() {\r\n        debugger;\r\n        let pos = this.pkList.map(function (e: any) { return e.jobid.toString(); }).indexOf(this.formid.toString());\r\n        if (pos >= 0 && pos != this.pkList.length) this.PopulateScreen(this.pkList[pos + 1].pkcol);\r\n    }\r\n\r\n    //on searching in pk autocomplete\r\n    onSelectedpk(pkDetail: any) {\r\n        if (pkDetail.jobid && pkDetail) {\r\n            this.PopulateScreen(pkDetail.pkcol);\r\n        }\r\n    }\r\n\r\n    // initialize\r\n    async ngOnInit() {\r\ndebugger\r\n        if (this.sessionService.getItem('role') == '1') {\r\n            this.userrole = 'Admin';\r\n            this.showAdminMenuaccess = true;\r\n            this.showApplicantmenu = false;\r\n            this.showCorporateMenuaccess = false;\r\n          } else if (this.sessionService.getItem('role') == '2') {\r\n            this.userrole = 'Applicant';\r\n            this.showApplicantmenu = true;\r\n            this.showAdminMenuaccess = false;\r\n            this.showCorporateMenuaccess = false;\r\n          } else if (this.sessionService.getItem('role') == '3') {\r\n            this.userrole = 'Corporate';\r\n            this.showCorporateMenuaccess = true;\r\n            this.showApplicantmenu = false;\r\n            this.showAdminMenuaccess = false;\r\n          }\r\n\r\n        //session & theme\r\n        this.themeService.theme.subscribe((val: string) => {\r\n            this.theme = val;\r\n        });\r\n\r\n        this.sessionData = this.sessionService.getSession();\r\n        if (this.sessionData != null) {\r\n            this.SESSIONUSERID = this.sessionData.userid;\r\n        }\r\n\r\n        this.theme = this.sessionService.getItem('selected-theme');\r\n        //this.viewHtml=this.sessionService.getViewHtml();\r\n\r\n        debugger;\r\n        //getting data - from list page, from other screen through dialog\r\n        if (this.data != null && this.data.data != null) {\r\n            this.data = this.data.data;\r\n            this.maindata = this.data;\r\n        }\r\n        if (this.maindata != null && this.maindata.showview != undefined && this.maindata.showview != null) this.showview = this.maindata.showview;\r\n        if (this.maindata != null && this.maindata.ScreenType != undefined && this.maindata.ScreenType != null) {\r\n            this.viewHtml = '';\r\n        }\r\n        if (this.data != null && this.data.event != null && this.data.event.data != null) this.data = this.data.event.data;\r\n        if (this.currentRoute.snapshot.paramMap.get('sourceKey') != null) {\r\n            this.sourceKey = this.currentRoute.snapshot.paramMap.get('sourceKey');\r\n        }\r\n        let mstjobrequirementid = null;\r\n\r\n        //if view button(eye) is clicked\r\n        if (this.currentRoute.snapshot.paramMap.get('viewid') != null) {\r\n            this.pkcol = this.currentRoute.snapshot.paramMap.get('viewid');\r\n            this.showview = true;\r\n            //this.viewHtml=this.sessionService.getViewHtml();\r\n        }\r\n        else if (this.currentRoute.snapshot.paramMap.get('usersource') != null) {\r\n            this.pkcol = this.sessionService.getItem('usersource');\r\n        }\r\n        else if (this.data != null && this.data.pkcol != null) {\r\n            this.pkcol = this.data.pkcol;\r\n        }\r\n        else {\r\n            this.pkcol = this.currentRoute.snapshot.paramMap.get('id');\r\n            this.showFormType = this.currentRoute.snapshot.paramMap.get('showFormType');\r\n        }\r\n        //copy the data from previous dialog\r\n        this.viewHtml = ``;\r\n        this.PopulateFromMainScreen(this.data, false);\r\n        this.PopulateFromMainScreen(this.dynamicconfig.data, true);\r\n        if (this.currentRoute.snapshot.paramMap.get('tableid') != null) {\r\n            this.ShowTableslist = this.currentRoute.snapshot.paramMap.get('tableid').split(',');\r\n        }\r\n        this.formid = mstjobrequirementid;\r\n        //alert(mstjobrequirementid);\r\n\r\n        //if pk is empty - go to resetting form.fill default values.otherwise, fetch records\r\n        if (this.pkcol == null) {\r\n            this.Set_mstjobstatuses_TableConfig();\r\n            setTimeout(() => {\r\n                //this.Set_mstjobstatuses_TableDropDownConfig();\r\n            });\r\n\r\n            this.resetForm();\r\n        }\r\n        else {\r\n            if (this.maindata == undefined || this.maindata == null || this.maindata.save == true) await this.PopulateScreen(this.pkcol);\r\n            //get the record from api\r\n            //foreign keys\r\n        }\r\n        this.mstjobrequirement_service.getDefaultData().then(res => {\r\n            debugger\r\n            console.log('getDefaultData() ', res.list_skills.value);\r\n\r\n            this.locations_List = res.list_locations.value;\r\n            this.skills_List = res.list_skills.value;\r\n            this.education_List = res.list_education.value;\r\n            this.language_List = res.list_language.value;\r\n        }).catch((err) => { this.spinner.hide(); console.log(err); });\r\n\r\n        //autocomplete\r\n        this.mstjobrequirement_service.get_mstjobrequirements_List().then(res => {\r\n            debugger\r\n            this.pkList = res as mstjobrequirement[];\r\n            this.pkoptionsEvent.emit(this.pkList);\r\n\r\n            this.showedu = res.mstjobrequirement.educationdesc,\r\n            this.showlan = res.mstjobrequirement.languagedesc,\r\n            this.showloc = res.mstjobrequirement.locationdesc,\r\n            this.showskill = res.mstjobrequirement.skilldesc\r\n        }\r\n        ).catch((err) => { this.spinner.hide(); console.log(err); });\r\n        //setting the flag that the screen is not touched\r\n        this.mstjobrequirement_Form.markAsUntouched();\r\n        this.mstjobrequirement_Form.markAsPristine();\r\n\r\n\r\n        // let result = this.router.routerState.snapshot.url.match(\"view\");\r\n        // console.log('result ', result)\r\n        // console.log(result[0]);\r\n        // if (result[0] == \"mstapplicantreferencerequestsaccepted\") {\r\n        //     this.showloc = true;\r\n        //     this.showskill = true;\r\n        //     this.showedu = true;\r\n        //     this.showlan = true;\r\n        // } else {\r\n        //     this.showloc = false;\r\n        //     this.showskill = false;\r\n        //     this.showedu = false;\r\n        //     this.showlan = false;\r\n        // }\r\n    }\r\n\r\n\r\n\r\n    resetForm() {\r\n        if (this.mstjobrequirement_Form != null)\r\n            this.mstjobrequirement_Form.reset();\r\n        this.mstjobrequirement_Form.patchValue({\r\n        });\r\n        setTimeout(() => {\r\n            this.mstjobstatuses_LoadTable();\r\n        });\r\n        this.PopulateFromMainScreen(this.data, false);\r\n        this.PopulateFromMainScreen(this.dynamicconfig.data, true);\r\n    }\r\n\r\n    onDelete() {\r\n        let jobid = this.mstjobrequirement_Form.get('jobid').value;\r\n        if (jobid != null) {\r\n            if (confirm('Are you sure to delete this record ?')) {\r\n                this.mstjobrequirement_service.delete_mstjobrequirement(jobid).then(res => {\r\n                    this.resetForm();\r\n                }\r\n                ).catch((err) => { this.spinner.hide(); console.log(err); });\r\n            }\r\n        }\r\n        else {\r\n            this.toastr.addSingle(\"error\", \"\", \"select a record\");\r\n        }\r\n    }\r\n    onCopy() {\r\n        this.mstjobrequirement_Form.patchValue({\r\n            jobid: null\r\n        });\r\n        if (this.formData.jobid != null) this.formData.jobid = null;\r\n        for (let i = 0; i < this.tbl_mstjobstatuses.source.length; i++) {\r\n            this.tbl_mstjobstatuses.source[i].viewid = null;\r\n        }\r\n    }\r\n    PopulateFromMainScreen(mainscreendata: any, bdisable: any) {\r\n        debugger\r\n        if (mainscreendata != null) {\r\n            for (let key in mainscreendata) {\r\n                if (key != 'visiblelist' && key != 'hidelist' && key != 'event') {\r\n\r\n                    let jsonstring = \"\";\r\n                    let json = null;\r\n                    let ctrltype = typeof (mainscreendata[key]);\r\n                    if (false)\r\n                        json = \"\";\r\n                    else if (key == \"tobefilledbefore\")\r\n                        this.mstjobrequirement_Form.patchValue({ \"tobefilledbefore\": this.ngbDateParserFormatter.parse(mainscreendata[key]) });\r\n                    else if (ctrltype == \"string\") {\r\n                        this.mstjobrequirement_Form.patchValue({ [key]: mainscreendata[key] });\r\n                    }\r\n                    else {\r\n                        this.mstjobrequirement_Form.patchValue({ [key]: mainscreendata[key] });\r\n                    }\r\n                    {\r\n                        {\r\n                            if (bdisable && this.mstjobrequirement_Form.controls[key] != undefined) {\r\n                                this.mstjobrequirement_Form.controls[key].disable({ onlySelf: true });\r\n                                this.hidelist.push(key);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onClose() {\r\n        this.dialogRef.close(this.objvalues);\r\n    }\r\n    goBack(){\r\n\r\n        this.router.navigate(['/home/boreportviewer/jobq']);\r\n\r\n    }\r\n    onSubmitAndWait() {\r\n        debugger\r\n        if (this.maindata == undefined || (this.maindata.maindatapkcol != '' && this.maindata.maindatapkcol != null && this.maindata.maindatapkcol != undefined) || this.maindata.save == true) {\r\n            this.onSubmitData(false);\r\n        }\r\n        else if (this.maindata != null && (this.maindata.ScreenType == 1 || this.maindata.ScreenType == 2)) {\r\n            this.onSubmitDataDlg(false);\r\n        }\r\n        else {\r\n            this.onSubmitData(false);\r\n        }\r\n    }\r\n    onSubmit() {\r\n        debugger\r\n        if (this.maindata == undefined || (this.maindata.maindatapkcol != '' && this.maindata.maindatapkcol != null && this.maindata.maindatapkcol != undefined) || this.maindata.save == true) {\r\n            this.onSubmitData(true);\r\n        }\r\n        else if ((this.maindata != null && (this.maindata.ScreenType == 1 || this.maindata.ScreenType == 2))) {\r\n            this.onSubmitDataDlg(true);\r\n        }\r\n        else {\r\n            this.onSubmitData(true);\r\n        }\r\n    }\r\n    locations_onChange(event) {\r\n        // let e = evt.value;\r\n        this.locations_results = this.locations_List.filter(v => (v.label || '').toLowerCase().indexOf(event.query.toLowerCase()) > -1).slice(0, 10);\r\n        // this.mstjobrequirement_Form.patchValue({ locationsdesc: evt.options[evt.options.selectedIndex].text });\r\n    }\r\n    skills_onChange(event) {\r\n        // if(this.skills_List != undefined && this.skills_List != null)nam\r\n        this.skills_results = this.skills_List.filter(v => (v.label || '').toLowerCase().indexOf(event.query.toLowerCase()) > -1).slice(0, 10);\r\n\r\n        // let e = evt.value;\r\n        // this.mstjobrequirement_Form.patchValue({ skillsdesc: evt.options[evt.options.selectedIndex].text });\r\n    }\r\n    education_onChange(event) {\r\n        // let e = evt.value;\r\n        this.education_results = this.education_List.filter(v => (v.label || '').toLowerCase().indexOf(event.query.toLowerCase()) > -1).slice(0, 10);\r\n        // this.mstjobrequirement_Form.patchValue({ educationdesc: evt.options[evt.options.selectedIndex].text });\r\n    }\r\n    language_onChange(event) {\r\n        // let e = this.f.language.value as any;\r\n        this.language_results = this.language_List.filter(v => (v.label || '').toLowerCase().indexOf(event.query.toLowerCase()) > -1).slice(0, 10);\r\n        // this.mstjobrequirement_Form.patchValue({ languagedesc: evt.options[evt.options.selectedIndex].text });\r\n    }\r\n    attachmentuploader(e: any) {\r\n        for (let i = 0; i < e.files.length; i++) {\r\n            this.fileAttachmentList.push(e.files[i]);\r\n            let max = 0;\r\n            let attachmentobj = null;\r\n            if (this.attachmentFieldJson == null) this.attachmentFieldJson = [];\r\n            max = Array.of(this.attachmentFieldJson).length; attachmentobj = new KeyValuePair((this.attachmentFieldJson.length + 1 + max).toString(), e.files[i].name);\r\n            this.attachmentFieldJson.push(attachmentobj);\r\n            max = 0;\r\n            if (this.attachmentlist != null) max = Array.of(this.attachmentlist).length; attachmentobj = new KeyValuePair((this.attachmentlist.length + 1 + max).toString(), e.files[i].name);\r\n            this.attachmentlist.push(attachmentobj);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    edit_mstjobrequirements() {\r\n        this.showview = false;\r\n        setTimeout(() => {\r\n        });\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    async PopulateScreen(pkcol: any) {\r\n        debugger\r\n        this.spinner.show();\r\n        this.mstjobrequirement_service.get_mstjobrequirements_ByEID(pkcol).then(res => {\r\n            this.spinner.hide();\r\ndebugger\r\n            this.formData = res.mstjobrequirement;\r\n            let formproperty = res.mstjobrequirement.formproperty;\r\n            if (formproperty && formproperty.edit == false) this.showview = true;\r\n            this.pkcol = res.mstjobrequirement.pkcol;\r\n            this.formid = res.mstjobrequirement.jobid;\r\n            this.FillData(res);\r\n        }).catch((err) => { console.log(err); });\r\n    }\r\n\r\n    FillData(res: any) {\r\n        debugger\r\n        this.formData = res.mstjobrequirement;\r\n        this.formid = res.mstjobrequirement.jobid;\r\n        this.pkcol = res.mstjobrequirement.pkcol;\r\n        this.bmyrecord = false;\r\n        if ((res.mstjobrequirement as any).applicantid == this.sessionService.getItem('applicantid')) this.bmyrecord = true;\r\n\r\n        // this.showedu = res.mstjobrequirement.educationdesc;\r\n        // this.showlan = res.mstjobrequirement.languagedesc;\r\n        // this.showloc = res.mstjobrequirement.locationdesc;\r\n        // this.showskill = res.mstjobrequirement.skilldesc;\r\n\r\n        console.log('res ', res.mstjobrequirement.educationdesc);\r\n        console.log('res ', res.mstjobrequirement.languagedesc);\r\n        console.log('res ', res.mstjobrequirement.locationdesc);\r\n        console.log('res ', res.mstjobrequirement.skilldesc);\r\n        // //console.log(res.order);\r\n        // console.log('res.mstjobrequirement ', res.mstjobrequirement);\r\ndebugger\r\n        this.mstjobrequirement_Form.patchValue({\r\n            jobid: res.mstjobrequirement.jobid,\r\n            corporateid: res.mstjobrequirement.corporateid,\r\n            jobdescription: res.mstjobrequirement.jobdescription,\r\n            jobrequirement: res.mstjobrequirement.jobrequirement,\r\n            numberofpositions: res.mstjobrequirement.numberofpositions,\r\n            tobefilledbefore: this.ngbDateParserFormatter.parse(res.mstjobrequirement.tobefilledbefore),\r\n            experiencefrom: res.mstjobrequirement.experiencefrom,\r\n            experienceto: res.mstjobrequirement.experienceto,\r\n            locations: res.mstjobrequirement.locations,\r\n            skills: res.mstjobrequirement.skills,\r\n            education: res.mstjobrequirement.education,\r\n            language: res.mstjobrequirement.language,\r\n            referenceavailability: res.mstjobrequirement.referenceavailability,\r\n            referencevalidation: res.mstjobrequirement.referencevalidation,\r\n            attachment: JSON.parse(res.mstjobrequirement.attachment),\r\n            status: res.mstjobrequirement.status,\r\n            statusdesc: res.mstjobrequirement.statusdesc,\r\n            educationdesc: res.mstjobrequirement.educationdesc,\r\n            languagedesc: res.mstjobrequirement.languagedesc,\r\n            locationdesc: res.mstjobrequirement.locationdesc,\r\n            skilldesc: res.mstjobrequirement.skilldesc\r\n        });\r\n        setTimeout(() => {\r\n            this.getSkillsDescription();\r\n            this.getLanguageDescription();\r\n            this.getlocationDescription();\r\n            this.geteducationDescription();\r\n        }, 400);\r\n        debugger\r\n        this.mstjobrequirement = res.mstjobrequirement;\r\n        this.mstjobrequirement_menuactions = res.mstjobrequirement_menuactions;\r\n        this.mstjobstatus_menuactions = res.mstjobstatus_menuactions;\r\n        this.mstjobstatuses_visiblelist = res.mstjobstatuses_visiblelist;\r\n        if (this.mstjobrequirement_Form.get('attachment').value != null && this.mstjobrequirement_Form.get('attachment').value != \"\" && this.fileattachment != null && this.fileattachment != undefined) this.fileattachment.setattachmentlist(this.mstjobrequirement_Form.get('attachment').value);\r\n        //Child Tables if any\r\n        this.Set_mstjobstatuses_TableConfig();\r\n        this.mstjobstatuses_LoadTable(res.mstjobstatuses);\r\n    }\r\n\r\n\r\n    validate() {\r\n        let ret = true;\r\n        return ret;\r\n    }\r\n\r\n    getSkillsDescription() {\r\n        debugger;\r\n        let skillsdescription: any[] = [];\r\n        for (let i = 0; i < this.skills_List.length; i++) {\r\n            for (let j = 0; j < this.mstjobrequirement_Form.get('skills').value.length; j++) {\r\n                if ((this.skills_List[i] as any).value.toString() == this.mstjobrequirement_Form.get('skills').value[j].toString()) {\r\n\r\n                    skillsdescription.push((this.skills_List[i] as any));\r\n                }\r\n            }\r\n        }\r\n        this.mstjobrequirement_Form.patchValue({ skills: skillsdescription });\r\n    }\r\n    getLanguageDescription() {\r\n        debugger;\r\n        let languagedescription: any[] = [];\r\n        for (let i = 0; i < this.language_List.length; i++) {\r\n            for (let j = 0; j < this.mstjobrequirement_Form.get('language').value.length; j++) {\r\n                if ((this.language_List[i] as any).value.toString() == this.mstjobrequirement_Form.get('language').value[j].toString()) {\r\n\r\n                    languagedescription.push((this.language_List[i] as any));\r\n                }\r\n            }\r\n        }\r\n        this.mstjobrequirement_Form.patchValue({ language: languagedescription });\r\n    }\r\n    geteducationDescription() {\r\n        debugger;\r\n        let educationdescription: any[] = [];\r\n        for (let i = 0; i < this.education_List.length; i++) {\r\n            for (let j = 0; j < this.mstjobrequirement_Form.get('education').value.length; j++) {\r\n                if ((this.education_List[i] as any).value.toString() == this.mstjobrequirement_Form.get('education').value[j].toString()) {\r\n\r\n                    educationdescription.push((this.education_List[i] as any));\r\n                }\r\n            }\r\n        }\r\n        this.mstjobrequirement_Form.patchValue({ education: educationdescription });\r\n    }\r\n    getlocationDescription() {\r\n        debugger;\r\n        let locationdescription: any[] = [];\r\n        for (let i = 0; i < this.locations_List.length; i++) {\r\n            for (let j = 0; j < this.mstjobrequirement_Form.get('locations').value.length; j++) {\r\n                if ((this.locations_List[i] as any).value.toString() == this.mstjobrequirement_Form.get('locations').value[j].toString()) {\r\n\r\n                    locationdescription.push((this.locations_List[i] as any));\r\n                }\r\n            }\r\n        }\r\n        this.mstjobrequirement_Form.patchValue({ locations: locationdescription });\r\n    }\r\n    getHtml(html: any) {\r\n        let ret = \"\";\r\n        ret = html;\r\n        for (let key in this.mstjobrequirement_Form.controls) {\r\n            let val = this.mstjobrequirement_Form.controls[key].value;\r\n            if (val == 'null' || val == null || val == undefined) val = '';\r\n            if (this.mstjobrequirement_Form.controls[key] != null) {\r\n                if (false) {\r\n                    if (this.formData != null && this.formData[key] != null && this.formData[key] != '[]' && this.formData[key] != undefined && this.formData[key].length > 0) ret = ret.replace(new RegExp('##' + key + '##', 'g'), AppConstants.AttachmentURL + JSON.parse(this.formData[key])[0][\"name\"]);\r\n                }\r\n                else if (false) {\r\n                    if (this.formData != null && this.formData[key] != null && this.formData[key] != undefined) ret = ret.replace(new RegExp('##' + key + '##', 'g'), \"<div class='Stars' style='--rating:\" + this.formData[key] + \"></div>\");\r\n                }\r\n                else if (false) {\r\n                    if (this.formData != null && this.formData[key] != null && this.formData[key] != undefined) ret = ret.replace(new RegExp('##' + key + '##', 'g'), \"<div class='progress--circle progress--\" + this.formData[key] + \"'><div class='progress__number'>\" + this.formData[key] + \"%</div></div>\");\r\n                }\r\n                else\r\n                    ret = ret.replace(new RegExp('##' + key + '##', 'g'), val);\r\n            }\r\n        }\r\n        var re = /##(\\w+)##/g;\r\n        ret = ret.replace(re, '');\r\n        return ret;\r\n    }\r\n\r\n    async onSubmitDataDlg(bclear: any) {\r\n        this.isSubmitted = true;\r\n        if (!this.mstjobrequirement_Form.valid) {\r\n            this.toastr.addSingle(\"error\", \"\", \"Enter the required fields\");\r\n            return;\r\n        }\r\n\r\n        var obj = this.mstjobrequirement_Form.getRawValue();\r\n        obj.tobefilledbefore = new Date(this.mstjobrequirement_Form.get('tobefilledbefore').value ? this.ngbDateParserFormatter.format(this.mstjobrequirement_Form.get('tobefilledbefore').value) + '  UTC' : null);\r\n        obj.locations = null;\r\n        if (this.mstjobrequirement_Form.get('locations').value != null) obj.locationsstring = JSON.stringify(this.mstjobrequirement_Form.get('locations').value);\r\n        obj.skills = null;\r\n        if (this.mstjobrequirement_Form.get('skills').value != null) obj.skillsstring = JSON.stringify(this.mstjobrequirement_Form.get('skills').value);\r\n        // if (this.mstjobrequirement_Form.get('skills').value != null) obj.skillsstring = JSON.stringify(this.mstjobrequirement_Form.get('skills').value);\r\n        obj.education = null;\r\n        if (this.mstjobrequirement_Form.get('education').value != null) obj.educationstring = JSON.stringify(this.mstjobrequirement_Form.get('education').value);\r\n        obj.language = null;\r\n        if (this.mstjobrequirement_Form.get('language').value != null) obj.languagestring = JSON.stringify(this.mstjobrequirement_Form.get('language').value);\r\n        if (this.fileattachment.getAttachmentList() != null) obj.attachment = JSON.stringify(this.fileattachment.getAttachmentList());\r\n        obj.fileAttachmentList = this.fileattachment.getAllFiles();\r\n        console.log(obj);\r\n        await this.sharedService.upload(this.fileAttachmentList);\r\n        this.attachmentlist = [];\r\n        if (this.fileattachment) this.fileattachment.clear();\r\n        this.objvalues.push(obj);\r\n        this.dialogRef.close(this.objvalues);\r\n        setTimeout(() => {\r\n            //this.dialogRef.destroy();\r\n        }, 200);\r\n    }\r\n\r\n    //This has to come from bomenuactions & procedures\r\n    afterAction(mode: any) {\r\n        let formname = \"\";\r\n        let query = \"\";\r\n        if (mode == \"new\")\r\n            this.router.navigate(['/home/' + formname + '/' + formname + query]);\r\n        else if (mode == \"refresh\")\r\n            this.router.navigate(['/home/' + formname + '/' + formname + '/edit/' + this.formid + query]);\r\n    }\r\n    getSkills(skills_List) {\r\n        debugger;\r\n        let skills: any[] = [];\r\n\r\n        for (let i = 0; i < skills_List.length; i++) {\r\n            skills.push((skills_List[i] as any).value.toString());\r\n        }\r\n        return skills;\r\n    }\r\n    getLocation(locations_List) {\r\n        debugger;\r\n        let locations: any[] = [];\r\n\r\n        for (let i = 0; i < locations_List.length; i++) {\r\n            locations.push((locations_List[i] as any).value.toString());\r\n        }\r\n        return locations;\r\n    }\r\n    getEducation(education_List) {\r\n        debugger;\r\n        let education: any[] = [];\r\n\r\n        for (let i = 0; i < education_List.length; i++) {\r\n            education.push((education_List[i] as any).value.toString());\r\n        }\r\n        return education;\r\n    }\r\n    getLanguage(language_List) {\r\n        debugger;\r\n        let language: any[] = [];\r\n\r\n        for (let i = 0; i < language_List.length; i++) {\r\n            language.push((language_List[i] as any).value.toString());\r\n        }\r\n        return language;\r\n    }\r\n\r\n\r\n    async onSubmitData(bclear: any) {\r\n        debugger;\r\n        this.isSubmitted = true;\r\n        let strError = \"\";\r\n        if (!this.mstjobrequirement_Form.valid) {\r\n            this.toastr.addSingle(\"error\", \"\", \"Enter the required fields\");\r\n            return;\r\n        }\r\n        // Object.keys(this.mstjobrequirement_Form.controls).forEach(key => {\r\n        //     const controlErrors: ValidationErrors = this.mstjobrequirement_Form.get(key).errors;\r\n        //     if (controlErrors != null) {\r\n        //         Object.keys(controlErrors).forEach(keyError => {\r\n        //             strError += 'control: ' + key + ', Error: ' + keyError + '<BR>';\r\n        //         });\r\n        //     }\r\n        // });\r\n        if (strError != \"\") return this.sharedService.alert(strError);\r\n\r\n\r\n\r\n        if (!this.validate()) {\r\n            return;\r\n        }\r\n        this.formData = this.mstjobrequirement_Form.getRawValue();\r\n        if (this.dynamicconfig.data != null) {\r\n            for (let key in this.dynamicconfig.data) {\r\n                if (key != 'visiblelist' && key != 'hidelist') {\r\n                    if (this.mstjobrequirement_Form.controls[key] != null) {\r\n                        this.formData[key] = this.mstjobrequirement_Form.controls[key].value;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var obj = this.mstjobrequirement_Form.getRawValue();\r\n        this.formData.tobefilledbefore = new Date(this.mstjobrequirement_Form.get('tobefilledbefore').value ? this.ngbDateParserFormatter.format(this.mstjobrequirement_Form.get('tobefilledbefore').value) + '  UTC' : null);\r\n        this.formData.locations = null;\r\n        if (this.mstjobrequirement_Form.get('locations').value != null) this.formData.locationsstring = JSON.stringify(this.getLocation(this.mstjobrequirement_Form.get('locations').value));\r\n        this.formData.skills = null;\r\n        if (this.mstjobrequirement_Form.get('skills').value != null) this.formData.skillsstring = JSON.stringify(this.getSkills(this.mstjobrequirement_Form.get('skills').value));\r\n        this.formData.education = null;\r\n        if (this.mstjobrequirement_Form.get('education').value != null) this.formData.educationstring = JSON.stringify(this.getEducation(this.mstjobrequirement_Form.get('education').value));\r\n        this.formData.language = null;\r\n        if (this.mstjobrequirement_Form.get('language').value != null) this.formData.languagestring = JSON.stringify(this.getLanguage(this.mstjobrequirement_Form.get('language').value));\r\n        if (this.fileattachment.getAttachmentList() != null) this.formData.attachment = JSON.stringify(this.fileattachment.getAttachmentList());\r\n        this.formData.Deleted_mstjobstatus_IDs = this.Deleted_mstjobstatus_IDs;\r\n        this.fileAttachmentList = this.fileattachment.getAllFiles();\r\n        console.log(this.formData);\r\n        this.spinner.show();\r\n        this.mstjobrequirement_service.saveOrUpdate_mstjobrequirements(this.formData, this.tbl_mstjobstatuses?.source?.data,).subscribe(\r\n            async res => {\r\n                await this.sharedService.upload(this.fileAttachmentList);\r\n                this.attachmentlist = [];\r\n                if (this.fileattachment) this.fileattachment.clear();\r\n                if (this.tbl_mstjobstatuses.source) {\r\n                    for (let i = 0; i < this.tbl_mstjobstatuses.source.data.length; i++) {\r\n                        if (this.tbl_mstjobstatuses.source.data[i].fileAttachmentList) await this.sharedService.upload(this.tbl_mstjobstatuses.source.data[i].fileAttachmentList);\r\n                    }\r\n                }\r\n                this.spinner.hide();\r\n                debugger;\r\n                this.toastr.addSingle(\"success\", \"\", \"Successfully saved\");\r\n                this.objvalues.push((res as any).mstjobrequirement);\r\n                if (!bclear) this.showview = true;\r\n                if (document.getElementById(\"contentAreascroll\") != undefined) document.getElementById(\"contentAreascroll\").scrollTop = 0;\r\n                if (!bclear && this.maindata != null && (this.maindata.ScreenType == 1 || this.maindata.ScreenType == 2)) {\r\n                    this.dialogRef.close(this.objvalues);\r\n                    return;\r\n                }\r\n                else {\r\n                    if (document.getElementById(\"contentAreascroll\") != undefined) document.getElementById(\"contentAreascroll\").scrollTop = 0;\r\n                }\r\n                this.clearList();\r\n                if (bclear) {\r\n                    this.resetForm();\r\n                }\r\n                else {\r\n                    if (this.maindata != null && (this.maindata.ScreenType == 1 || this.maindata.ScreenType == 2)) {\r\n                        this.objvalues.push((res as any).mstjobrequirement);\r\n                        this.dialogRef.close(this.objvalues);\r\n                    }\r\n                    else {\r\n                        this.FillData(res);\r\n                    }\r\n                }\r\n                this.mstjobrequirement_Form.markAsUntouched();\r\n                this.mstjobrequirement_Form.markAsPristine();\r\n            },\r\n            err => {\r\n                debugger;\r\n                this.spinner.hide();\r\n                this.toastr.addSingle(\"error\", \"\", err.error);\r\n                console.log(err);\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    //dropdown edit from the screen itself -> One screen like Reportviewer\r\n    clearList() {\r\n        this.tbl_mstjobstatuses.source = new LocalDataSource();\r\n    }\r\n\r\n    AddOrEdit_mstjobstatus(event: any, viewid: any, jobid: any) {\r\n        let add = false;\r\n        if (event == null) add = true;\r\n        let childsave = false;\r\n        if (this.pkcol != undefined && this.pkcol != null) childsave = true;\r\n        this.dialog.open(mstjobstatusComponent,\r\n            {\r\n                data: { showview: false, save: childsave, maindatapkcol: this.pkcol, event, viewid, jobid, visiblelist: this.mstjobstatuses_visiblelist, hidelist: this.mstjobstatuses_hidelist, ScreenType: 2 },\r\n            }\r\n        ).onClose.subscribe(res => {\r\n            if (res) {\r\n                if (add) {\r\n                    for (let i = 0; i < res.length; i++) {\r\n                        this.tbl_mstjobstatuses.source.add(res[i]);\r\n                    }\r\n                    this.tbl_mstjobstatuses.source.refresh();\r\n                }\r\n                else {\r\n                    this.tbl_mstjobstatuses.source.update(event.data, res[0]);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    onDelete_mstjobstatus(event: any, childID: number, i: number) {\r\n        if (childID != null)\r\n            this.Deleted_mstjobstatus_IDs += childID + \",\";\r\n        this.tbl_mstjobstatuses.source.splice(i, 1);\r\n        //this.updateGrandTotal();\r\n    }\r\n\r\n\r\n    PrevForm() {\r\n        let formid = this.sessionService.getItem(\"key\");\r\n        let prevform = this.sessionService.getItem(\"prevform\");\r\n        this.router.navigate([\"/home/\" + prevform + \"/\" + prevform + \"/edit/\" + formid]);\r\n    }\r\n    //start of Grid Codes mstjobstatuses\r\n    mstjobstatuses_settings: any;\r\n\r\n    show_mstjobstatuses_Checkbox() {\r\n        debugger;\r\n        if (this.tbl_mstjobstatuses.source.settings['selectMode'] == 'multi') this.tbl_mstjobstatuses.source.settings['selectMode'] = 'single';\r\n        else\r\n            this.tbl_mstjobstatuses.source.settings['selectMode'] = 'multi';\r\n        this.tbl_mstjobstatuses.source.initGrid();\r\n    }\r\n    delete_mstjobstatuses_All() {\r\n        this.tbl_mstjobstatuses.source.settings['selectMode'] = 'single';\r\n    }\r\n    show_mstjobstatuses_Filter() {\r\n        setTimeout(() => {\r\n            //  this.Set_mstjobstatuses_TableDropDownConfig();\r\n        });\r\n        if (this.tbl_mstjobstatuses.source.settings != null) this.tbl_mstjobstatuses.source.settings['hideSubHeader'] = !this.tbl_mstjobstatuses.source.settings['hideSubHeader'];\r\n        this.tbl_mstjobstatuses.source.initGrid();\r\n    }\r\n    show_mstjobstatuses_InActive() {\r\n    }\r\n    enable_mstjobstatuses_InActive() {\r\n    }\r\n    async Set_mstjobstatuses_TableDropDownConfig(res) {\r\n        if (!this.bfilterPopulate_mstjobstatuses) {\r\n\r\n            var clone = this.sharedService.clone(this.tbl_mstjobstatuses.source.settings);\r\n            if (clone.columns['applicantid'] != undefined) clone.columns['applicantid'].filter = { type: 'list', config: { selectText: 'Select...', list: JSON.parse(JSON.stringify(res.list_mstjobstatuses_applicantid.value)), }, };\r\n            if (clone.columns['applicantid'] != undefined) clone.columns['applicantid'].editor = { type: 'list', config: { selectText: 'Select...', list: JSON.parse(JSON.stringify(res.list_mstjobstatuses_applicantid.value)), }, };\r\n            this.tbl_mstjobstatuses.source.settings = clone;\r\n            this.tbl_mstjobstatuses.source.initGrid();\r\n\r\n            var clone = this.sharedService.clone(this.tbl_mstjobstatuses.source.settings);\r\n            if (clone.columns['corporateid'] != undefined) clone.columns['corporateid'].filter = { type: 'list', config: { selectText: 'Select...', list: JSON.parse(JSON.stringify(res.list_mstjobstatuses_corporateid.value)), }, };\r\n            if (clone.columns['corporateid'] != undefined) clone.columns['corporateid'].editor = { type: 'list', config: { selectText: 'Select...', list: JSON.parse(JSON.stringify(res.list_mstjobstatuses_corporateid.value)), }, };\r\n            this.tbl_mstjobstatuses.source.settings = clone;\r\n            this.tbl_mstjobstatuses.source.initGrid();\r\n\r\n            var clone = this.sharedService.clone(this.tbl_mstjobstatuses.source.settings);\r\n            if (clone.columns['jobid'] != undefined) clone.columns['jobid'].filter = { type: 'list', config: { selectText: 'Select...', list: JSON.parse(JSON.stringify(res.list_mstjobstatuses_jobid.value)), }, };\r\n            if (clone.columns['jobid'] != undefined) clone.columns['jobid'].editor = { type: 'list', config: { selectText: 'Select...', list: JSON.parse(JSON.stringify(res.list_mstjobstatuses_jobid.value)), }, };\r\n            this.tbl_mstjobstatuses.source.settings = clone;\r\n            this.tbl_mstjobstatuses.source.initGrid();\r\n        }\r\n        this.bfilterPopulate_mstjobstatuses = true;\r\n    }\r\n    async mstjobstatuses_beforesave(event: any) {\r\n        event.confirm.resolve(event.newData);\r\n\r\n\r\n\r\n    }\r\n    Set_mstjobstatuses_TableConfig() {\r\n        this.mstjobstatuses_settings = {\r\n            hideSubHeader: true,\r\n            mode: 'external',\r\n            selectMode: 'single',\r\n            actions: {\r\n                columnTitle: '',\r\n                width: '300px',\r\n                add: !this.showview,\r\n                edit: true, // true,\r\n                delete: !this.showview,\r\n                position: 'left',\r\n                custom: this.mstjobstatus_menuactions\r\n            },\r\n            add: {\r\n                addButtonContent: '<i class=\"nb-plus\"></i>',\r\n                createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n                cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n                confirmCreate: true,\r\n            },\r\n            edit: {\r\n                editButtonContent: '<i class=\"nb-edit\"></i>',\r\n                saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n                cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n                confirmSave: true,\r\n            },\r\n            delete: {\r\n                deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n                confirmDelete: true,\r\n            },\r\n            columns: {\r\n                applicantiddesc: {\r\n                    title: 'Applicant',\r\n                    type: 'html',\r\n                    filter: true,\r\n                },\r\n                corporateiddesc: {\r\n                    title: 'Corporate',\r\n                    type: 'html',\r\n                    filter: true,\r\n                },\r\n                viewdatetime: {\r\n                    title: 'View Date Time',\r\n                    type: 'custom',\r\n                    renderComponent: SmartTableDatepickerRenderComponent,\r\n                    editor: {\r\n                        type: 'custom',\r\n                        component: SmartTableDatepickerComponent,\r\n                    },\r\n                },\r\n                intereststatus: {\r\n                    title: 'Interest Status',\r\n                    type: 'boolean',\r\n                    editor: {\r\n                        type: 'checkbox',\r\n                        config: {\r\n                            true: 'true',\r\n                            false: 'false',\r\n                            resetText: 'clear',\r\n                        },\r\n                    },\r\n                    filter: {\r\n                        type: 'checkbox',\r\n                        config: {\r\n                            true: 'true',\r\n                            false: 'false',\r\n                            resetText: 'clear',\r\n                        },\r\n                    },\r\n                },\r\n                comments: {\r\n                    title: 'Comments',\r\n                    type: 'html',\r\n                    filter: true,\r\n                    editor: {\r\n                        type: 'textarea',\r\n                    },\r\n                },\r\n                allcomments: {\r\n                    title: 'All Comments',\r\n                    type: 'html',\r\n                    filter: true,\r\n                    editor: {\r\n                        type: 'textarea',\r\n                    },\r\n                },\r\n                hiringstatus: {\r\n                    title: 'Hiring Status',\r\n                    type: 'boolean',\r\n                    editor: {\r\n                        type: 'checkbox',\r\n                        config: {\r\n                            true: 'true',\r\n                            false: 'false',\r\n                            resetText: 'clear',\r\n                        },\r\n                    },\r\n                    filter: {\r\n                        type: 'checkbox',\r\n                        config: {\r\n                            true: 'true',\r\n                            false: 'false',\r\n                            resetText: 'clear',\r\n                        },\r\n                    },\r\n                },\r\n                ctcoffered: {\r\n                    title: 'C T C Offered',\r\n                    type: '',\r\n                    filter: true,\r\n                },\r\n            },\r\n        };\r\n    }\r\n    mstjobstatuses_LoadTable(mstjobstatuses = new LocalDataSource()) {\r\n        if (this.ShowTableslist == null || this.ShowTableslist.length == 0 || this.ShowTableslist.indexOf(this.mstjobstatuses_ID) >= 0) {\r\n            if (this.tbl_mstjobstatuses != undefined) this.tbl_mstjobstatuses.source = new LocalDataSource();\r\n            if (this.tbl_mstjobstatuses != undefined) this.tbl_mstjobstatuses.source.load(mstjobstatuses as any as LocalDataSource);\r\n            if (this.tbl_mstjobstatuses != undefined) this.tbl_mstjobstatuses.source.setPaging(1, 20, true);\r\n        }\r\n    }\r\n\r\n    //external to inline\r\n    /*\r\n    mstjobstatuses_route(event:any,action:any) {\r\n    switch ( action) {\r\n    case 'create':\r\n    if (this.mstjobrequirement_service.mstjobstatuses.length == 0)\r\n    {\r\n        this.tbl_mstjobstatuses.source.grid.createFormShown = true;\r\n    }\r\n    else\r\n    {\r\n        let obj = new mstjobstatus();\r\n        this.mstjobrequirement_service.mstjobstatuses.push(obj);\r\n        this.tbl_mstjobstatuses.source.refresh();\r\n        if ((this.mstjobrequirement_service.mstjobstatuses.length / this.tbl_mstjobstatuses.source.getPaging().perPage).toFixed(0) + 1 != this.tbl_mstjobstatuses.source.getPaging().page)\r\n        {\r\n            this.tbl_mstjobstatuses.source.setPage((this.mstjobrequirement_service.mstjobstatuses.length / this.tbl_mstjobstatuses.source.getPaging().perPage).toFixed(0) + 1);\r\n        }\r\n        setTimeout(() => {\r\n            this.tbl_mstjobstatuses.source.grid.edit(this.tbl_mstjobstatuses.source.grid.getLastRow());\r\n        });\r\n    }\r\n    break;\r\n    case 'delete':\r\n    let index = this.tbl_mstjobstatuses.source.data.indexOf(event.data);\r\n    this.onDelete_mstjobstatus(event,event.data.viewid,((this.tbl_mstjobstatuses.source.getPaging().page-1) *this.tbl_mstjobstatuses.source.getPaging().perPage)+index);\r\n    this.tbl_mstjobstatuses.source.refresh();\r\n    break;\r\n    }\r\n    }\r\n\r\n    */\r\n    mstjobstatuses_route(event: any, action: any) {\r\n        var addparam = \"\";\r\n        if (this.currentRoute.snapshot.paramMap.get('tableid') != null) {\r\n            addparam = \"/show/\" + this.currentRoute.snapshot.paramMap.get('tableid');\r\n        }\r\n\r\n        switch (action) {\r\n            case 'create':\r\n                this.AddOrEdit_mstjobstatus(event, null, this.formid);\r\n                break;\r\n            case 'view':\r\n                break;\r\n            case 'edit':\r\n                this.AddOrEdit_mstjobstatus(event, event.data.viewid, this.formid);\r\n                break;\r\n            case 'delete':\r\n                this.onDelete_mstjobstatus(event, event.data.viewid, ((this.tbl_mstjobstatuses.source.getPaging().page - 1) * this.tbl_mstjobstatuses.source.getPaging().perPage) + event.index);\r\n                this.tbl_mstjobstatuses.source.refresh();\r\n                break;\r\n        }\r\n    }\r\n    mstjobstatuses_onDelete(obj) {\r\n        let viewid = obj.data.viewid;\r\n        if (confirm('Are you sure to delete this record ?')) {\r\n            this.mstjobrequirement_service.delete_mstjobrequirement(viewid).then(res =>\r\n                this.mstjobstatuses_LoadTable()\r\n            );\r\n        }\r\n    }\r\n    async onCustom_mstjobstatuses_Action(event: any) {\r\n        let objbomenuaction = await this.sharedService.onCustomAction(event, \"mstjobstatuses\");\r\n        let formname = (objbomenuaction as any).actionname;\r\n\r\n\r\n\r\n\r\n    }\r\n    mstjobstatuses_Paging(val) {\r\n        debugger;\r\n        this.tbl_mstjobstatuses.source.setPaging(1, val, true);\r\n    }\r\n\r\n    handle_mstjobstatuses_GridSelected(event: any) {\r\n        this.mstjobstatuses_selectedindex = this.tbl_mstjobstatuses.source.findIndex(i => i.viewid === event.data.viewid);\r\n    }\r\n    Is_mstjobstatuses_Visible() {\r\n        if (this.ShowTableslist == null || this.ShowTableslist.length == 0 || this.ShowTableslist.indexOf(this.mstjobstatuses_ID) >= 0) {\r\n            return \"tbl smart-table-container\";\r\n        }\r\n        else {\r\n            return \"hide\";\r\n        }\r\n    }\r\n    //end of Grid Codes mstjobstatuses\r\n\r\n}\r\n\r\n\r\n\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { mstjobrequirement } from '../model/mstjobrequirement.model';\r\nimport { mstjobstatus } from '../model/mstjobstatus.model';\r\nimport { environment } from '../../environments/environment';\r\nimport { ImstjobrequirementResponse } from '../model/mstjobrequirement.model';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { AppConstants, DropDownValues } from '../../../../n-tire-biz-app/src/app/shared/helper'\r\nimport { SessionService } from '../../../../n-tire-biz-app/src/app/pages/core/services/session.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class mstjobrequirementService {\r\n  readonly rootURL = AppConstants.baseURL;\r\n\r\n  constructor(private http: HttpClient, private sessionService: SessionService) { }\r\n\r\n  valid() {\r\n    return true;\r\n\r\n  }\r\n  saveOrUpdate_mstjobrequirements(formData, mstjobstatuses,): any {\r\n    if (this.valid()) {\r\n      var body = {\r\n        ...formData,\r\n        mstjobstatuses: mstjobstatuses.filter(function (el) { return el != undefined && Object.keys(el).length != 0; }),\r\n      };\r\n      return this.http.post(AppConstants.ntirebizURL + '/mstjobrequirement', body);\r\n    }\r\n  }\r\n\r\n  getDefaultData(): any {\r\n    if (this.valid()) {\r\n      return this.http.get(AppConstants.ntirebizURL + '/mstjobrequirement' + '/getdefaultdata').toPromise();\r\n    }\r\n  }\r\n  get_mstjobrequirements_List(): any {\r\n    if (this.valid()) {\r\n      return this.http.get(AppConstants.ntirebizURL + '/mstjobrequirement').toPromise();\r\n    }\r\n  }\r\n  getListBy_jobid(jobid: number): any {\r\n    if (this.valid()) {\r\n      return this.http.get(AppConstants.ntirebizURL + '/mstjobrequirement' + '/jobid/' + jobid).toPromise();\r\n    }\r\n  }\r\n\r\n  getList(key: string): any {\r\n    if (this.valid()) {\r\n      return this.http.get(AppConstants.ntirebizURL + '/mstjobrequirement' + '/param/' + key).toPromise();\r\n    }\r\n  }\r\n\r\n\r\n  get_mstjobrequirements_ByEID(id: any): any {\r\n    if (this.valid()) {\r\n      return this.http.get(AppConstants.ntirebizURL + '/mstjobrequirement' + '/e/' + id).toPromise();\r\n    }\r\n  }\r\n  get_mstjobrequirements_ByID(id: number): any {\r\n    if (this.valid()) {\r\n      return this.http.get(AppConstants.ntirebizURL + '/mstjobrequirement' + '/' + id).toPromise();\r\n    }\r\n  }\r\n\r\n  delete_mstjobrequirement(id: number): any {\r\n    if (this.valid()) {\r\n      return this.http.delete(AppConstants.ntirebizURL + '/mstjobrequirement' + '/' + id).toPromise();\r\n    }\r\n  }\r\n\r\n  getList_locations(): any {\r\n    return this.http.get(AppConstants.ntirecrmURL + '/mstjobrequirement' + '/getList_locations').toPromise();\r\n  }\r\n\r\n  getList_skills(): any {\r\n    return this.http.get(AppConstants.ntirecrmURL + '/mstjobrequirement' + '/getList_skills').toPromise();\r\n  }\r\n\r\n  getList_education(): any {\r\n    return this.http.get(AppConstants.ntirecrmURL + '/mstjobrequirement' + '/getList_education').toPromise();\r\n  }\r\n\r\n  getList_language(): any {\r\n    return this.http.get(AppConstants.ntirecrmURL + '/mstjobrequirement' + '/getList_language/').toPromise();\r\n  }\r\n\r\n\r\n}\r\n\r\n","export default \"<i class=\\\"fa fa-step-backward\\\" *ngIf=\\\"sourceKey\\\" (click)=\\\"nav.back()\\\"></i>\\r\\n<ngx-spinner></ngx-spinner>\\r\\n<form [formGroup]=\\\"mstjobrequirement_Form\\\" (ngSubmit)=\\\"onSubmit()\\\" [ngClass]=\\\"theme\\\">\\r\\n  <div class=\\\"row second\\\"\\r\\n    [ngClass]=\\\"{'report-admin-bgColor': this.userrole=='Admin','report-applicant-bgColor':this.userrole=='Applicant','report-coporate-bgColor':this.userrole=='Corporate'}\\\">\\r\\n    <div class=\\\"col-4\\\" style=\\\"display: flex;align-items: center;\\\">\\r\\n      <h1 class=\\\" columns mainheader left\\\"><a href='#/home/{{p_currenturl}}' style=\\\"margin: auto;\\\">{{'Job Requirements'\\r\\n          | translate}}</a>\\r\\n      </h1>\\r\\n    </div>\\r\\n\\r\\n    <div class='col-4  sticky1 second' style=\\\"display: flex;justify-content: end;align-items: center;\\\" role='toolbar' aria-label='Toolbar with button groups'>\\r\\n      <!--btn-toolbar-->\\r\\n      <div class='dropdown d-inline-block btn-dropdown show'>\\r\\n\\r\\n        <ul class='nav nav-pills  input-group'>\\r\\n          <li class='nav-item actionheader col' *ngIf='maindata==null || maindata==undefined'>\\r\\n            <a [routerLink]='' (click)='first()'><i class='fa fa-fast-backward'\\r\\n                aria-hidden='true'></i></a>&nbsp;&nbsp;&nbsp;&nbsp;<a [routerLink]='' (click)='prev()'><i\\r\\n                class='fa fa-step-backward' aria-hidden='true'></i></a>&nbsp;&nbsp;\\r\\n            <app-popupselect [options]='pkList' [optionsEvent]='pkoptionsEvent' [form]='pkform'\\r\\n              (selectItem)='onSelectedpk($event)' [reportid]=31 [menuid]=31 formControlName='pk' id='pk' desc=''>\\r\\n            </app-popupselect>\\r\\n\\r\\n            <a [routerLink]='' (click)='next()'><i class='fa fa-step-forward' aria-hidden='true'></i></a>&nbsp;&nbsp; <a\\r\\n              [routerLink]='' (click)='last()'><i class='fa fa-fast-forward' aria-hidden='true'></i></a>\\r\\n\\r\\n          </li>\\r\\n          <li *ngIf='!showview && (maindata==null || maindata==undefined)' class='nav-item dropdown  actionheader'>\\r\\n            <ul class=\\\"nav navbar-nav1\\\">\\r\\n              <li *ngIf=' (maindata==null || maindata==undefined)' class=\\\"dropdown\\\">\\r\\n                <a [routerLink]='' class='dropdown-toggle' data-toggle='dropdown' role='button' aria-haspopup='true'\\r\\n                  aria-expanded='false'> <span class='caret'></span>Actions</a>\\r\\n                <ul class=\\\"dropdown-menu\\\">\\r\\n                  <li><a class='dropdown-item' *ngIf='ScreenType!=2' [routerLink]='' (click)='resetForm()'><i\\r\\n                        class='fa fa-plus' aria-hidden='true'></i>&nbsp;&nbsp;&nbsp;New</a></li>\\r\\n                  <li><a class='dropdown-item' [routerLink]='' (click)='onSubmit()'><i class='fa fa-save'\\r\\n                        aria-hidden='true'></i>&nbsp;&nbsp;&nbsp;Save</a></li>\\r\\n                  <li><a class='dropdown-item' [routerLink]='' (click)='onDelete()'><i class='fa fa-trash'\\r\\n                        aria-hidden='true'></i>&nbsp;&nbsp;&nbsp;Delete</a></li>\\r\\n\\r\\n                  <li role=\\\"separator\\\" class=\\\"divider\\\">\\r\\n                    <hr>\\r\\n                  </li>\\r\\n\\r\\n                  <li><a class='dropdown-item' [routerLink]='' (click)='onCopy()'><i class='fa fa-copy'\\r\\n                        aria-hidden='true'></i>&nbsp;&nbsp;&nbsp;Copy</a></li>\\r\\n                  <li><a class='dropdown-item' [routerLink]=''><i class='fa fa-clipboard'\\r\\n                        aria-hidden='true'></i>&nbsp;&nbsp;&nbsp;Clipboard</a></li>\\r\\n                  <li><a class='dropdown-item' [routerLink]=''><i class='fa fa-print'\\r\\n                        aria-hidden='true'></i>&nbsp;&nbsp;&nbsp;Print</a></li>\\r\\n                  <li><a class='dropdown-item' [routerLink]=''><i class='fa fa-envelope'\\r\\n                        aria-hidden='true'></i>&nbsp;&nbsp;&nbsp;Mail</a></li>\\r\\n\\r\\n\\r\\n                </ul>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </li>\\r\\n          <!--<ng-container *ngFor=\\\"let action of mstjobrequirement_menuactions\\\">\\r\\n    <li><a  class=\\\"alert-action\\\" [routerLink]=''  (click)=\\\"onChangeAction(action.actionid)\\\" ><i class=\\\"fa fa-new\\\" aria-hidden=\\\"true\\\"></i>&nbsp;&nbsp;&nbsp;{{action.description}}</a></li>\\r\\n</ng-container>-->\\r\\n\\r\\n          <!-- <li class='nav-item actionheader'\\r\\n            *ngIf=\\\"maindata!=undefined && maindata!=null && (maindata.ScreenType==1 || maindata.ScreenType==2)\\\">\\r\\n            <a class=\\\"alert-danger\\\" [routerLink]='' (click)=\\\"onClose()\\\"><i class=\\\"fa fa-close\\\"></i> Close</a>\\r\\n          </li> -->\\r\\n\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class='col-4' style=\\\"display: flex;justify-content: end;align-items: center;\\\">\\r\\n\\r\\n      <button *ngIf='showview' (click)=\\\"edit_mstjobrequirements()\\\" class=\\\"popup-add-button\\\">\\r\\n        <i class=\\\"nb-edit\\\"></i>Edit\\r\\n      </button>\\r\\n      <li class='nav-item actionheader' *ngIf=\\\"!showview\\\">\\r\\n        <!-- <a class=\\\"alert-success  popup-add-button mobile_view_btn\\\" [routerLink]=''(click)=\\\"goBack()\\\" ><i class=\\\"fa fa-arrow-left\\\" aria-hidden=\\\"true\\\"></i>\\r\\n          Back</a> -->\\r\\n        <!-- <a class=\\\"alert-success popup-add-button\\\" [routerLink]='' (click)=\\\"onSubmitAndWait()\\\"><i class=\\\"fa fa-database\\\"></i>\\r\\n          Submit</a> -->\\r\\n        <!-- <a class=\\\"alert-primary\\\" *ngIf='data.pkcol==null || maindata.ScreenType==null' [routerLink]=''\\r\\n          (click)=\\\"onSubmit()\\\"><i class=\\\"fa fa-share-square\\\"></i> Submit & Clear</a> -->\\r\\n        <app-action *ngIf=\\\"f.jobid.value != null\\\" (afterAction)=\\\"afterAction($event)\\\" [menuid]=\\\"p_menuid\\\"\\r\\n          [value]=\\\"f.jobid.value\\\" [status]=\\\"f.status.value\\\"></app-action>\\r\\n      </li>\\r\\n      <button *ngIf=\\\"!showview\\\" (click)=\\\"onSubmitAndWait()\\\" class=\\\"popup-add-button job_re_btn\\\">\\r\\n        <i class=\\\"fa fa-database\\\"></i>Submit\\r\\n        <app-action *ngIf=\\\"f.jobid.value != null\\\" (afterAction)=\\\"afterAction($event)\\\" [menuid]=\\\"p_menuid\\\"\\r\\n          [value]=\\\"f.jobid.value\\\" [status]=\\\"f.status.value\\\"></app-action>\\r\\n      </button>\\r\\n\\r\\n      <button class=\\\"popup-add-button job_re_btn\\\"\\r\\n        *ngIf=\\\"maindata!=undefined && maindata!=null && (maindata.ScreenType==1 || maindata.ScreenType==2)\\\"\\r\\n        (click)=\\\"onClose()\\\">\\r\\n        <i class=\\\"fa fa-close\\\"></i>Close\\r\\n      </button>\\r\\n\\r\\n      <ul style=\\\"display: none;\\\">\\r\\n        <li><a class='alert-info' [routerLink]='' *ngIf='showview' (click)=\\\"edit_mstjobrequirements()\\\"><i\\r\\n              class=\\\"nb-edit\\\"></i>Edit</a></li>\\r\\n        <li class='nav-item actionheader' *ngIf=\\\"!showview\\\">\\r\\n          <a class=\\\"alert-success popup-add-button\\\" [routerLink]='' (click)=\\\"onSubmitAndWait()\\\"><i\\r\\n              class=\\\"fa fa-database\\\"></i>\\r\\n            Submit</a>\\r\\n          <!-- <a class=\\\"alert-primary\\\" *ngIf='data.pkcol==null || maindata.ScreenType==null' [routerLink]=''\\r\\n              (click)=\\\"onSubmit()\\\"><i class=\\\"fa fa-share-square\\\"></i> Submit & Clear</a> -->\\r\\n          <app-action *ngIf=\\\"f.jobid.value != null\\\" (afterAction)=\\\"afterAction($event)\\\" [menuid]=\\\"p_menuid\\\"\\r\\n            [value]=\\\"f.jobid.value\\\" [status]=\\\"f.status.value\\\"></app-action>\\r\\n        </li>\\r\\n        <li class='nav-item actionheader'\\r\\n          *ngIf=\\\"maindata!=undefined && maindata!=null && (maindata.ScreenType==1 || maindata.ScreenType==2)\\\">\\r\\n          <a class=\\\"alert-danger\\\" [routerLink]='' (click)=\\\"onClose()\\\"><i class=\\\"fa fa-close\\\"></i> Close</a>\\r\\n        </li>\\r\\n\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container\\\"\\r\\n    id=\\\"{{maindata ==undefined || maindata==null || maindata.ScreenType!=2?'contentAreascroll':'contentArea1'}}\\\">\\r\\n    <div class=\\\"w-5\\\" *ngIf=\\\"showFormType=='1'\\\" style=\\\"margin-top:10px!important\\\">\\r\\n      <div (click)=\\\"PrevForm()\\\"><i title=\\\"Form\\\" class=\\\"fa fa-file\\\"></i></div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"(viewHtml != '' && showview)\\\" [innerHTML]='getHtml(viewHtml)'>\\r\\n\\r\\n    </div>\\r\\n    <ngb-tabset class=\\\"tabset1\\\" [destroyOnHide]=\\\"false\\\">\\r\\n      <div *ngIf=\\\"(viewHtml != '' && showview)\\\" [innerHTML]='getHtml(viewHtml)'>\\r\\n\\r\\n      </div>\\r\\n      <ngb-tab>\\r\\n        <ng-template ngbTabTitle>\\r\\n          <div (click)=\\\"ToolBar(true)\\\">Master</div>\\r\\n        </ng-template>\\r\\n        <ng-template ngbTabContent>\\r\\n          <p-accordion [multiple]='true'>\\r\\n            <div *ngIf=\\\"(viewHtml == '' || !showview)\\\" class=\\\"form-group row\\\">\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('corporateid') == -1) && (corporateidvisible==undefined || corporateidvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 education_view_mobile\\\">\\r\\n                <label for=\\\"corporateid\\\" class=\\\"control-label\\\">Corporate</label>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.corporateid?.value}}</label>\\r\\n                <input *ngIf=\\\"!showview\\\" id=\\\"corporateid\\\" formControlName=\\\"corporateid\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('jobdescription') == -1) && (jobdescriptionvisible==undefined || jobdescriptionvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 education_view_mobile\\\">\\r\\n                <label for=\\\"jobdescription\\\" class=\\\"control-label required\\\">Job Description</label>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.jobdescription?.value}}</label>\\r\\n                <input *ngIf=\\\"!showview\\\" id=\\\"jobdescription\\\" required formControlName=\\\"jobdescription\\\"\\r\\n                  class=\\\"form-control\\\">\\r\\n                <app-field-error-display [displayError]=\\\"f.jobdescription.errors?.required\\\"\\r\\n                  errorMsg=\\\"Enter {{'Job Description' | translate}}\\\">\\r\\n                </app-field-error-display>\\r\\n              </div>\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('jobrequirement') == -1) && (jobrequirementvisible==undefined || jobrequirementvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 education_view_mobile\\\">\\r\\n                <label for=\\\"jobrequirement\\\" class=\\\"control-label required\\\">Job Requirement</label>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.jobrequirement?.value}}</label>\\r\\n                <input *ngIf=\\\"!showview\\\" id=\\\"jobrequirement\\\" required formControlName=\\\"jobrequirement\\\"\\r\\n                  class=\\\"form-control\\\">\\r\\n                <app-field-error-display [displayError]=\\\"f.jobrequirement.errors?.required\\\"\\r\\n                  errorMsg=\\\"Enter {{'Job Requirement' | translate}}\\\">\\r\\n                </app-field-error-display>\\r\\n              </div>\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('numberofpositions') == -1) && (numberofpositionsvisible==undefined || numberofpositionsvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 education_view_mobile\\\">\\r\\n                <label for=\\\"numberofpositions\\\" class=\\\"control-label required\\\">Number Of Positions</label>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.numberofpositions?.value}}</label>\\r\\n                <input *ngIf=\\\"!showview\\\" id=\\\"numberofpositions\\\" required formControlName=\\\"numberofpositions\\\"\\r\\n                  class=\\\"form-control\\\">\\r\\n                <app-field-error-display [displayError]=\\\"f.numberofpositions.errors?.required\\\"\\r\\n                  errorMsg=\\\"Enter {{'Number Of Positions' | translate}}\\\">\\r\\n                </app-field-error-display>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"(viewHtml == '' || !showview)\\\" class=\\\"form-group row\\\">\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('tobefilledbefore') == -1) && (tobefilledbeforevisible==undefined || tobefilledbeforevisible==true))\\\"\\r\\n                style='' class=\\\"col-3 education_view_mobile\\\">\\r\\n                <label for=\\\"tobefilledbefore\\\" class=\\\"control-label\\\">To Be Filled Before</label>\\r\\n                <label *ngIf=\\\"showview\\\"\\r\\n                  class=\\\"labelview\\\">{{ngbDateParserFormatter.format(f.tobefilledbefore?.value)}}</label>\\r\\n                <div class=\\\"input-group\\\" *ngIf=\\\"!showview\\\">\\r\\n                  <input #tobefilledbeforeformpicker=\\\"ngbDatepicker\\\" [minDate]=\\\"minDate\\\" readonly ngbDatepicker\\r\\n                    name=\\\"tobefilledbeforeformpicker\\\" id=\\\"tobefilledbefore\\\" formControlName=\\\"tobefilledbefore\\\"\\r\\n                    class=\\\"form-control\\\">\\r\\n                  <button class=\\\"input-group-addon\\\" *ngIf=\\\"!showview\\\" (click)=\\\"tobefilledbeforeformpicker.toggle()\\\"\\r\\n                    type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('experiencefrom') == -1) && (experiencefromvisible==undefined || experiencefromvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 education_view_mobile\\\">\\r\\n                <label for=\\\"experiencefrom\\\" class=\\\"control-label\\\">Experience From</label>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.experiencefrom?.value}}</label>\\r\\n                <input *ngIf=\\\"!showview\\\" id=\\\"experiencefrom\\\" formControlName=\\\"experiencefrom\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('experienceto') == -1) && (experiencetovisible==undefined || experiencetovisible==true))\\\"\\r\\n                style='' class=\\\"col-3 education_view_mobile\\\">\\r\\n                <label for=\\\"experienceto\\\" class=\\\"control-label\\\">Experience To</label>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.experienceto?.value}}</label>\\r\\n                <input *ngIf=\\\"!showview\\\" id=\\\"experienceto\\\" formControlName=\\\"experienceto\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <!--locations-->\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('locations') == -1) && (locationsvisible==undefined || locationsvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 education_view_mobile\\\"><label for=\\\"locations\\\" class=\\\"control-label\\\">Locations</label>&nbsp;&nbsp; <br />\\r\\n                <p-autoComplete formControlName=\\\"locations\\\" field=\\\"label\\\" [multiple]=\\\"true\\\" *ngIf=\\\"!showview\\\"\\r\\n                  [suggestions]=\\\"locations_results\\\" (completeMethod)=\\\"locations_onChange($event)\\\"></p-autoComplete>\\r\\n                <!-- <p-multiSelect [options]=\\\"locations_List\\\" formControlName=\\\"locations\\\" [filter]=\\\"true\\\" *ngIf=\\\"!showview\\\"\\r\\n                  id=\\\"locationsdesc\\\" (change)=\\\"locations_onChange($event.target)\\\" formControlName=\\\"locations\\\"\\r\\n                  class=\\\"form-control\\\">\\r\\n                </p-multiSelect>  -->\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.locations?.label}}</label>\\r\\n                <label class=\\\"labelview alignment_label\\\" *ngIf=\\\"showview\\\">{{mstjobrequirement.locationdesc}}</label>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <!--skills-->\\r\\n\\r\\n            <div *ngIf=\\\"(viewHtml == '' || !showview)\\\" class=\\\"form-group row\\\">\\r\\n              <div *ngIf=\\\"((hidelist.indexOf('skills') == -1) && (skillsvisible==undefined || skillsvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 education_view_mobile\\\"><label for=\\\"skills\\\" class=\\\"control-label\\\"\\r\\n                  (click)=\\\"AddOrEdit_skills(null)\\\">Skills</label>&nbsp;&nbsp; <br />\\r\\n                <p-autoComplete formControlName=\\\"skills\\\" field=\\\"label\\\" id=\\\"skillsdesc\\\" [multiple]=\\\"true\\\"\\r\\n                  *ngIf=\\\"!showview\\\" [suggestions]=\\\"skills_results\\\"\\r\\n                  (completeMethod)=\\\"skills_onChange($event)\\\"></p-autoComplete>\\r\\n\\r\\n                <!-- <p-autoComplete formControlName=\\\"skills\\\" field=\\\"label\\\" id=\\\"skillsdesc\\\" [multiple]=\\\"true\\\" *ngIf=\\\"!showview\\\" [suggestions]=\\\"skills_results\\\"\\r\\n                  (completeMethod)=\\\"skills_onChange($event)\\\"></p-autoComplete> -->\\r\\n\\r\\n                <!-- <p-multiSelect [options]=\\\"skills_List\\\" formControlName=\\\"skills\\\" [filter]=\\\"true\\\" *ngIf=\\\"!showview\\\"\\r\\n                  id=\\\"skillsdesc\\\" (change)=\\\"skills_onChange($event.target)\\\" formControlName=\\\"skills\\\"\\r\\n                  class=\\\"form-control\\\">\\r\\n                </p-multiSelect> -->\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.skills?.label}}</label>\\r\\n                <label class=\\\"labelview alignment_label\\\" *ngIf=\\\"showview\\\">{{mstjobrequirement.skilldesc}}</label>\\r\\n              </div>\\r\\n\\r\\n              <!--education-->\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('education') == -1) && (educationvisible==undefined || educationvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 education_view_mobile\\\"><label for=\\\"education\\\" class=\\\"control-label\\\"\\r\\n                  (click)=\\\"AddOrEdit_education(null)\\\">Education</label>\\r\\n                <br />\\r\\n                <p-autoComplete formControlName=\\\"education\\\" field=\\\"label\\\" id=\\\"educationdesc\\\" [multiple]=\\\"true\\\"\\r\\n                  *ngIf=\\\"!showview\\\" [suggestions]=\\\"education_results\\\"\\r\\n                  (completeMethod)=\\\"education_onChange($event)\\\"></p-autoComplete>\\r\\n\\r\\n\\r\\n\\r\\n                <!-- <p-multiSelect [options]=\\\"education_List\\\" formControlName=\\\"education\\\" [filter]=\\\"true\\\" *ngIf=\\\"!showview\\\"\\r\\n                  id=\\\"educationdesc\\\" (change)=\\\"education_onChange($event.target)\\\" formControlName=\\\"education\\\"\\r\\n                  class=\\\"form-control\\\">\\r\\n                </p-multiSelect>  -->\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.education?.label}}</label>\\r\\n                <label class=\\\"labelview alignment_label\\\" *ngIf=\\\"showview\\\">{{mstjobrequirement.educationdesc}}</label>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <!--language-->\\r\\n\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('language') == -1) && (languagevisible==undefined || languagevisible==true))\\\"\\r\\n                style='' class=\\\"col-3 education_view_mobile\\\"><label for=\\\"language\\\" class=\\\"control-label\\\">Language</label>\\r\\n                <br />\\r\\n                <p-autoComplete formControlName=\\\"language\\\" field=\\\"label\\\" id=\\\"languagedesc\\\" [multiple]=\\\"true\\\"\\r\\n                  *ngIf=\\\"!showview\\\" [suggestions]=\\\"language_results\\\"\\r\\n                  (completeMethod)=\\\"language_onChange($event)\\\"></p-autoComplete>\\r\\n                <!-- <p-multiSelect [options]=\\\"language_List\\\" formControlName=\\\"language\\\" [filter]=\\\"false\\\" *ngIf=\\\"!showview\\\"\\r\\n                  id=\\\"languagedesc\\\" (change)=\\\"language_onChange($event.target)\\\" formControlName=\\\"language\\\"\\r\\n                  class=\\\"form-control\\\">\\r\\n                </p-multiSelect> -->\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.language?.label}}</label>\\r\\n                <label class=\\\"labelview alignment_label\\\" *ngIf=\\\"showview\\\">{{mstjobrequirement.languagedesc}}</label>\\r\\n              </div>\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('referenceavailability') == -1) && (referenceavailabilityvisible==undefined || referenceavailabilityvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 education_view_mobile\\\" style=\\\"display: flex; justify-content: center;  padding: 31px;\\r\\n                right: 16px;\\r\\n            \\\">\\r\\n                <div class=\\\"columnchk\\\">\\r\\n                  <label for=\\\"referenceavailability\\\" class=\\\"control-label\\\">Reference Availability</label>\\r\\n                  <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.referenceavailability?.value}}</label>\\r\\n                  <input type=\\\"checkbox\\\" *ngIf=\\\"!showview\\\" id=\\\"referenceavailability\\\"\\r\\n                    formControlName=\\\"referenceavailability\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"(viewHtml == '' || !showview)\\\" class=\\\"form-group row\\\">\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('referencevalidation') == -1) && (referencevalidationvisible==undefined || referencevalidationvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 education_view_mobile\\\" style=\\\"display: flex; justify-content: center;  padding: 31px;\\r\\n                right: 16px;\\r\\n            \\\">\\r\\n                <div class=\\\"columnchk\\\">\\r\\n                  <label for=\\\"referencevalidation\\\" class=\\\"control-label\\\">Reference Validation</label>\\r\\n                  <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.referencevalidation?.value}}</label>\\r\\n                  <input type=\\\"checkbox\\\" *ngIf=\\\"!showview\\\" id=\\\"referencevalidation\\\"\\r\\n                    formControlName=\\\"referencevalidation\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\"></div>\\r\\n              <div class=\\\"col\\\"></div>\\r\\n              <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n          </p-accordion>\\r\\n          <div class='full-width' *ngIf=\\\"attachmentVisible\\\">\\r\\n            <p-accordion [multiple]='true'>\\r\\n              <p-accordionTab [header]=\\\"'Attachment(' + fileattachment.getLength() + ')'\\\" [selected]='false'>\\r\\n                <app-attachment #fileattachment isAttachment=true formControlName=\\\"attachment\\\"\\r\\n                  [SessionData]=\\\"sessionData\\\"></app-attachment>\\r\\n              </p-accordionTab>\\r\\n            </p-accordion>\\r\\n          </div>\\r\\n        </ng-template>\\r\\n      </ngb-tab>\\r\\n      <ngb-tab>\\r\\n        <ng-template ngbTabTitle>\\r\\n          <div (click)=\\\"ToolBar(false)\\\">Job Statuses</div>\\r\\n        </ng-template>\\r\\n        <ng-template ngbTabContent>\\r\\n          <p-accordion [multiple]='true'>\\r\\n            <!-- child table mstjobstatuses-->\\r\\n            <div [ngClass]=\\\"Is_mstjobstatuses_Visible()\\\">\\r\\n              <!--End-->\\r\\n              <h4 class=\\\"form-group sticky1  columns left\\\">{{'Job Statuses' | translate}}\\r\\n                <select class='child' id=\\\"mstjobstatusesPagingdropdown\\\"\\r\\n                  (change)=\\\"mstjobstatuses_Paging($event.target.value)\\\" [value]='20'>\\r\\n                  <option value='20'>20</option>\\r\\n                  <option value='50'>50</option>\\r\\n                  <option value='100'>100</option>\\r\\n                </select>\\r\\n                <ul class=\\\"nav navbar-nav1\\\" style='display:none'>\\r\\n                  <li class=\\\"dropdown\\\">\\r\\n                    <a [routerLink]='' class='dropdown-toggle' data-toggle='dropdown' role='button' aria-haspopup='true'\\r\\n                      aria-expanded='false'> <span class='caret'></span></a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                      <li><a class=\\\"dropdown-item\\\" [routerLink]=''\\r\\n                          (click)=\\\"mstjobstatustoggleOption();mstjobstatuses_route(null, 'create')\\\"><i\\r\\n                            class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>&nbsp;&nbsp;&nbsp;New</a></li>\\r\\n                      <li role=\\\"separator\\\" class=\\\"divider\\\">\\r\\n                        <hr>\\r\\n                      </li>\\r\\n                      <li><a class=\\\"dropdown-item\\\" [routerLink]='' (click)=\\\"showmstjobstatusesFilter()\\\"><i\\r\\n                            class=\\\"fa fa-filter\\\" aria-hidden=\\\"true\\\"></i>&nbsp;&nbsp;&nbsp;Filter</a></li>\\r\\n                      <li><a class=\\\"dropdown-item\\\" [routerLink]=''><i class=\\\"fa fa-envelope\\\"\\r\\n                            aria-hidden=\\\"true\\\"></i>&nbsp;&nbsp;&nbsp;Mail</a></li>\\r\\n                    </ul>\\r\\n                  </li>\\r\\n                </ul>\\r\\n                <!-- <a class=\\\"rightside\\\" [routerLink]='' (click)=\\\"mstjobstatuses_route(null, 'create')\\\"><i\\r\\n                    class=\\\"fa fa-plus\\\"></i></a> -->\\r\\n              </h4>\\r\\n              <ng2-smart-table #tbl_mstjobstatuses (userRowSelect)=\\\"handle_mstjobstatuses_GridSelected($event)\\\"\\r\\n                [settings]=\\\"mstjobstatuses_settings\\\" (custom)=\\\"onCustom_mstjobstatuses_Action($event)\\\"\\r\\n                [source]=\\\"tbl_mstjobstatuses?.source?.data\\\" (delete)=\\\"mstjobstatuses_route($event,'delete')\\\"\\r\\n                (deleteConfirm)=\\\"mstjobstatuses_route($event,'delete')\\\" (create)=\\\"mstjobstatuses_route($event,'create')\\\"\\r\\n                (createConfirm)=\\\"mstjobstatuses_beforesave($event)\\\" (edit)=\\\"mstjobstatuses_route($event,'edit')\\\"\\r\\n                (editConfirm)=\\\"mstjobstatuses_beforesave($event)\\\">\\r\\n              </ng2-smart-table>\\r\\n            </div>\\r\\n            <!--End of child table mstjobstatuses-->\\r\\n          </p-accordion>\\r\\n        </ng-template>\\r\\n      </ngb-tab>\\r\\n    </ngb-tabset>\\r\\n  </div>\\r\\n</form>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}
{"version":3,"file":"default-projects_n-tire-biz-app_src_app_pages_forms_bomenumaster_bomenumaster_component_ts.js","mappings":"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","sources":["./projects/n-tire-biz-app/src/app/pages/forms/bomenumaster/bomenumaster.component.ts","./projects/n-tire-biz-app/src/app/pages/forms/bomenumaster/bomenumaster.component.html"],"sourcesContent":["import { bomenumasterService } from './../../../service/bomenumaster.service';\r\nimport { bomenumaster } from './../../../model/bomenumaster.model';\r\nimport { ElementRef, Component, OnInit, Inject, Optional, ViewChild, EventEmitter } from '@angular/core';\r\nimport { ToastService } from '../../../../../../n-tire-biz-app/src/app/pages/core/services/toast.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { DomSanitizer, SafeHtml } from \"@angular/platform-browser\";\r\n//Dropdown - nvarchar(5) - Backoffice -> Fixed Values menu\r\n\r\n//Custom error functions\r\nimport { KeyValuePair, MustMatch, DateCompare, MustEnable, MustDisable, Time } from '../../../../../../n-tire-biz-app/src/app/shared/general.validator';\r\n\r\n//child table\r\nimport { SmartTableDatepickerComponent, SmartTableDatepickerRenderComponent } from '../../../../../../n-tire-biz-app/src/app/custom/smart-table-datepicker.component';\r\nimport { SmartTablepopupselectComponent, SmartTablepopupselectRenderComponent } from '../../../../../../n-tire-biz-app/src/app/custom/smart-table-popupselect.component';\r\nimport { SmartTableFileRenderComponent } from '../../../../../../n-tire-biz-app/src/app/custom/smart-table-filerender.component';\r\n\r\n//Custom control\r\nimport { durationComponent } from '../../../../../../n-tire-biz-app/src/app/custom/duration.component';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { Ng2SmartTableComponent } from 'ng2-smart-table';\r\nimport { NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ShortcutInput, ShortcutEventOutput } from \"ng-keyboard-shortcuts\";\r\n//Shortcuts\r\nimport { KeyboardShortcutsService } from \"ng-keyboard-shortcuts\";\r\n//translator\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n//FK field services\r\n//detail table services\r\nimport { bomenuaction } from './../../../model/bomenuaction.model';\r\nimport { bomenuactionComponent } from './../../../pages/forms/bomenuaction/bomenuaction.component';\r\nimport { bomenuactionService } from './../../../service/bomenuaction.service';\r\nimport { switchMap, map, debounceTime } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, EmailValidator, ValidationErrors } from '@angular/forms';\r\n//primeng services\r\nimport { DynamicDialogRef } from 'primeng/dynamicDialog';\r\nimport { DynamicDialogConfig } from 'primeng/dynamicDialog';\r\nimport { FileUploadModule, FileUpload } from 'primeng/fileupload';\r\nimport { DialogService } from 'primeng/dynamicDialog';\r\n//session,application constants\r\nimport { SharedService } from '../../../../../../n-tire-biz-app/src/app/service/shared.service';\r\nimport { SessionService } from '../../../../../../n-tire-biz-app/src/app/pages/core/services/session.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ThemeService } from '../../../../../../n-tire-biz-app/src/app/pages/core/services/theme.service';\r\n//custom fields & attachments\r\nimport { AppConstants, DropDownValues } from '../../../../../../n-tire-biz-app/src/app/shared/helper';\r\n\r\n@Component({\r\n    selector: 'app-bomenumaster',\r\n    templateUrl: './bomenumaster.component.html',\r\n    styles: [],\r\n    providers: [KeyboardShortcutsService]\r\n})\r\n\r\n\r\n\r\nexport class bomenumasterComponent implements OnInit {\r\n    formData: bomenumaster;\r\n    list: bomenumaster[];\r\n    bmyrecord: boolean = false;\r\n    hidelist: any = [];\r\n    objvalues: any = [];\r\n    viewHtml: any = '';//stores html view of the screen\r\n    showview: boolean = false;//view or edit mode\r\n    theme: string = \"\";//current theme\r\n    //formdata: any;//current form data\r\n    shortcuts: ShortcutInput[] = [];//keyboard keys\r\n    showSubmit: boolean = true;//button to show\r\n    showGoWorkFlow: boolean = false;\r\n    pkList: any;//stores values - used in search, prev, next\r\n    pkoptionsEvent: EventEmitter<any> = new EventEmitter<any>();//autocomplete of pk\r\n    toolbarVisible: boolean = true;\r\n    customFieldServiceList: any;\r\n    CustomFormName: string = \"\";\r\n    CustomFormField: string = \"\";\r\n    CustomFormFieldValue: string = \"\";\r\n    p_menuid: any;\r\n    p_currenturl: any;\r\n    isSubmitted: boolean = false;\r\n    ShowTableslist: string[] = [];\r\n    data: any;\r\n    maindata: any;\r\n\r\n    bfilterPopulate_bomenumasters: boolean = false;\r\n    bfilterPopulate_bomenuactions: boolean = false;\r\n    bomenumaster_menuactions: any = []\r\n    bomenuaction_menuactions: any = []\r\n    @ViewChild('tbl_bomenuactions', { static: false }) tbl_bomenuactions: Ng2SmartTableComponent;\r\n\r\n    bomenumaster_Form: FormGroup;\r\n\r\n    parentid_List: DropDownValues[];\r\n    parentid_optionsEvent: EventEmitter<any> = new EventEmitter<any>();//autocomplete\r\n\r\n    private exportTime = { hour: 7, minute: 15, meriden: 'PM', format: 24 };\r\n    showFormType: any;\r\n    formid: any;\r\n    pkcol: any;\r\n    SESSIONUSERID: any;//current user\r\n\r\n    sessionData: any;\r\n    sourceKey: any;\r\n\r\n\r\n\r\n    bomenuactions_visiblelist: any;\r\n    bomenuactions_hidelist: any;\r\n\r\n    Deleted_bomenuaction_IDs: string = \"\";\r\n    bomenuactions_ID: string = \"1\";\r\n    bomenuactions_selectedindex: any;\r\n\r\n\r\n    constructor(\r\n        private nav: Location,\r\n        private translate: TranslateService,\r\n        private keyboard: KeyboardShortcutsService, private router: Router,\r\n        private themeService: ThemeService,\r\n        private ngbDateParserFormatter: NgbDateParserFormatter,\r\n        public dialogRef: DynamicDialogRef,\r\n        public dynamicconfig: DynamicDialogConfig,\r\n        public dialog: DialogService,\r\n        private bomenumaster_service: bomenumasterService,\r\n        private bomenuaction_service: bomenuactionService,\r\n        private fb: FormBuilder,\r\n        private sharedService: SharedService,\r\n        private sessionService: SessionService,\r\n        private toastr: ToastService,\r\n        private sanitizer: DomSanitizer,\r\n        private currentRoute: ActivatedRoute, private spinner: NgxSpinnerService) {\r\n        this.translate = this.sharedService.translate;\r\n        this.data = dynamicconfig;\r\n        this.p_menuid = sharedService.menuid;\r\n        this.p_currenturl = sharedService.currenturl;\r\n        this.keyboard.add([\r\n            {\r\n                key: 'cmd l',\r\n                command: () => this.router.navigate([\"/home/\" + this.p_currenturl]),\r\n                preventDefault: true\r\n            },\r\n            {\r\n                key: 'cmd s',\r\n                command: () => this.onSubmitData(false),\r\n                preventDefault: true\r\n            },\r\n            {\r\n                key: 'cmd f',\r\n                command: () => this.resetForm(),\r\n                preventDefault: true\r\n            }\r\n        ]);\r\n        this.bomenumaster_Form = this.fb.group({\r\n            pk: [null],\r\n            menuid: [null],\r\n            menucode: [null],\r\n            menudescription: [null, Validators.compose([Validators.required])],\r\n            menuurl: [null],\r\n            actionkey: [null],\r\n            iconname: [null],\r\n            helpurl: [null],\r\n            helptext: [null],\r\n            parentid: [null],\r\n            parentiddesc: [null],\r\n            orderno: [null],\r\n            action: [null],\r\n            showcheckbox: [null],\r\n            showstatus: [null],\r\n            checkboxcolumn: [null],\r\n            nonew: [null],\r\n            noedit: [null],\r\n            nodelete: [null],\r\n            wherecondition: [null],\r\n            status: [null],\r\n            statusdesc: [null],\r\n        });\r\n    }\r\n\r\n    get f() { return this.bomenumaster_Form.controls; }\r\n\r\n\r\n    //when child screens are clicked - it will be made invisible\r\n    ToolBar(prop) {\r\n        this.toolbarVisible = prop;\r\n    }\r\n\r\n    //function called when we navigate to other page.defined in routing\r\n    canDeactivate(): Observable<boolean> | boolean {\r\n        debugger;\r\n        if (this.bomenumaster_Form.dirty && this.bomenumaster_Form.touched) {\r\n            if (confirm('Do you want to exit the page?')) {\r\n                return Observable.of(true).delay(1000);\r\n            } else {\r\n                return Observable.of(false);\r\n            }\r\n        }\r\n        return Observable.of(true);\r\n    }\r\n\r\n    //check Unique fields\r\n    menudescriptionexists(e: any) {\r\n        debugger;\r\n        let pos = this.pkList.map(function (e: any) { return e.menudescription.toString().toLowerCase(); }).indexOf(e.target.value.toString().toLowerCase());\r\n\r\n        if (pos >= 0 && this.pkList[pos].menuid.toString() != this.formid.toString()) {\r\n            if (confirm(\"This Menu Description value exists in the database.Do you want to display the record ? \")) {\r\n                this.PopulateScreen(this.pkList[pos].pkcol);\r\n                return true;\r\n            }\r\n            else {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n                e.target.focus();\r\n                e.target.markAsDirty();\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    //navigation buttons\r\n    first() {\r\n        if (this.pkList.length > 0) this.PopulateScreen(this.pkList[0].pkcol);\r\n    }\r\n\r\n    last() {\r\n        if (this.pkList.length > 0) this.PopulateScreen(this.pkList[this.pkList.length - 1].pkcol);\r\n    }\r\n\r\n    prev() {\r\n        debugger;\r\n        let pos = this.pkList.map(function (e: any) { return e.menuid.toString(); }).indexOf(this.formid.toString());\r\n        if (pos > 0) this.PopulateScreen(this.pkList[pos - 1].pkcol);\r\n    }\r\n\r\n    next() {\r\n        debugger;\r\n        let pos = this.pkList.map(function (e: any) { return e.menuid.toString(); }).indexOf(this.formid.toString());\r\n        if (pos >= 0 && pos != this.pkList.length) this.PopulateScreen(this.pkList[pos + 1].pkcol);\r\n    }\r\n\r\n    //on searching in pk autocomplete\r\n    onSelectedpk(pkDetail: any) {\r\n        if (pkDetail.menuid && pkDetail) {\r\n            this.PopulateScreen(pkDetail.pkcol);\r\n        }\r\n    }\r\n\r\n    // initialize\r\n    async ngOnInit() {\r\n        //session & theme\r\n        this.themeService.theme.subscribe((val: string) => {\r\n            this.theme = val;\r\n        });\r\n\r\n        this.sessionData = this.sessionService.getSession();\r\n        if (this.sessionData != null) {\r\n            this.SESSIONUSERID = this.sessionData.userid;\r\n        }\r\n\r\n        this.theme = this.sessionService.getItem('selected-theme');\r\n        //this.viewHtml=this.sessionService.getViewHtml();\r\n\r\n        debugger;\r\n        //getting data - from list page, from other screen through dialog\r\n        if (this.data != null && this.data.data != null) {\r\n            this.data = this.data.data;\r\n            this.maindata = this.data;\r\n        }\r\n        if (this.maindata != null && this.maindata.showview != undefined && this.maindata.showview != null) this.showview = this.maindata.showview;\r\n        if (this.maindata != null && this.maindata.ScreenType != undefined && this.maindata.ScreenType != null) {\r\n            this.viewHtml = '';\r\n        }\r\n        if (this.data != null && this.data.event != null && this.data.event.data != null) this.data = this.data.event.data;\r\n        if (this.currentRoute.snapshot.paramMap.get('sourceKey') != null) {\r\n            this.sourceKey = this.currentRoute.snapshot.paramMap.get('sourceKey');\r\n        }\r\n        let bomenumasterid = null;\r\n\r\n        //if view button(eye) is clicked\r\n        if (this.currentRoute.snapshot.paramMap.get('viewid') != null) {\r\n            this.pkcol = this.currentRoute.snapshot.paramMap.get('viewid');\r\n            this.showview = true;\r\n            //this.viewHtml=this.sessionService.getViewHtml();\r\n        }\r\n        else if (this.currentRoute.snapshot.paramMap.get('usersource') != null) {\r\n            this.pkcol = this.sessionService.getItem('usersource');\r\n        }\r\n        else if (this.data != null && this.data.pkcol != null) {\r\n            this.pkcol = this.data.pkcol;\r\n        }\r\n        else {\r\n            this.pkcol = this.currentRoute.snapshot.paramMap.get('id');\r\n            this.showFormType = this.currentRoute.snapshot.paramMap.get('showFormType');\r\n        }\r\n        //copy the data from previous dialog \r\n        this.viewHtml = ``;\r\n        this.PopulateFromMainScreen(this.data, false);\r\n        this.PopulateFromMainScreen(this.dynamicconfig.data, true);\r\n        if (this.currentRoute.snapshot.paramMap.get('tableid') != null) {\r\n            this.ShowTableslist = this.currentRoute.snapshot.paramMap.get('tableid').split(',');\r\n        }\r\n        this.formid = bomenumasterid;\r\n        //alert(bomenumasterid);\r\n\r\n        //if pk is empty - go to resetting form.fill default values.otherwise, fetch records\r\n        if (this.pkcol == null) {\r\n            this.Set_bomenuactions_TableConfig();\r\n            setTimeout(() => {\r\n                //this.Set_bomenuactions_TableDropDownConfig();\r\n            });\r\n\r\n            this.resetForm();\r\n        }\r\n        else {\r\n            if (this.maindata == undefined || this.maindata == null || this.maindata.save == true) await this.PopulateScreen(this.pkcol);\r\n            //get the record from api\r\n            //foreign keys \r\n        }\r\n        this.bomenumaster_service.getDefaultData().then(res => {\r\n            this.parentid_List = res.list_parentid.value;\r\n        }).catch((err) => { this.spinner.hide(); console.log(err); });\r\n\r\n        //autocomplete\r\n        this.bomenumaster_service.get_bomenumasters_List().then(res => {\r\n            this.pkList = res as bomenumaster[];\r\n            this.pkoptionsEvent.emit(this.pkList);\r\n        }\r\n        ).catch((err) => { this.spinner.hide(); console.log(err); });\r\n        //setting the flag that the screen is not touched \r\n        this.bomenumaster_Form.markAsUntouched();\r\n        this.bomenumaster_Form.markAsPristine();\r\n    }\r\n    onSelected_parentid(parentidDetail: any) {\r\n        if (parentidDetail.value && parentidDetail) {\r\n            this.bomenumaster_Form.patchValue({\r\n                parentid: parentidDetail.value,\r\n                parentiddesc: parentidDetail.label,\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    resetForm() {\r\n        if (this.bomenumaster_Form != null)\r\n            this.bomenumaster_Form.reset();\r\n        this.bomenumaster_Form.patchValue({\r\n        });\r\n        setTimeout(() => {\r\n            this.bomenuactions_LoadTable();\r\n        });\r\n        this.PopulateFromMainScreen(this.data, false);\r\n        this.PopulateFromMainScreen(this.dynamicconfig.data, true);\r\n    }\r\n\r\n    onDelete() {\r\n        let menuid = this.bomenumaster_Form.get('menuid').value;\r\n        if (menuid != null) {\r\n            if (confirm('Are you sure to delete this record ?')) {\r\n                this.bomenumaster_service.delete_bomenumaster(menuid).then(res => {\r\n                    this.resetForm();\r\n                }\r\n                ).catch((err) => { this.spinner.hide(); console.log(err); });\r\n            }\r\n        }\r\n        else {\r\n            this.toastr.addSingle(\"error\", \"\", \"select a record\");\r\n        }\r\n    }\r\n    onCopy() {\r\n        this.bomenumaster_Form.patchValue({\r\n            menuid: null\r\n        });\r\n        if (this.formData.menuid != null) this.formData.menuid = null;\r\n        for (let i = 0; i < this.tbl_bomenuactions.source.length; i++) {\r\n            this.tbl_bomenuactions.source[i].actionid = null;\r\n        }\r\n    }\r\n    PopulateFromMainScreen(mainscreendata: any, bdisable: any) {\r\n        if (mainscreendata != null) {\r\n            for (let key in mainscreendata) {\r\n                if (key != 'visiblelist' && key != 'hidelist' && key != 'event') {\r\n\r\n                    let jsonstring = \"\";\r\n                    let json = null;\r\n                    let ctrltype = typeof (mainscreendata[key]);\r\n                    if (false)\r\n                        json = \"\";\r\n                    else if (ctrltype == \"string\") {\r\n                        this.bomenumaster_Form.patchValue({ [key]: mainscreendata[key] });\r\n                    }\r\n                    else {\r\n                        this.bomenumaster_Form.patchValue({ [key]: mainscreendata[key] });\r\n                    }\r\n                    {\r\n                        {\r\n                            if (bdisable && this.bomenumaster_Form.controls[key] != undefined) {\r\n                                this.bomenumaster_Form.controls[key].disable({ onlySelf: true });\r\n                                this.hidelist.push(key);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onClose() {\r\n        this.dialogRef.close(this.objvalues);\r\n    }\r\n\r\n    onSubmitAndWait() {\r\n        if (this.maindata == undefined || (this.maindata.maindatapkcol != '' && this.maindata.maindatapkcol != null && this.maindata.maindatapkcol != undefined) || this.maindata.save == true || this.formData.menudescription != null) {\r\n            this.onSubmitData(false);\r\n        }\r\n        else if (this.maindata != null && (this.maindata.ScreenType == 1 || this.maindata.ScreenType == 2)) {\r\n            this.onSubmitDataDlg(false);\r\n        }\r\n        else {\r\n            this.onSubmitData(false);\r\n        }\r\n    }\r\n    onSubmit() {\r\n        if (this.maindata == undefined || (this.maindata.maindatapkcol != '' && this.maindata.maindatapkcol != null && this.maindata.maindatapkcol != undefined) || this.maindata.save == true || this.formData.menudescription != null) {\r\n            this.onSubmitData(true);\r\n        }\r\n        else if ((this.maindata != null && (this.maindata.ScreenType == 1 || this.maindata.ScreenType == 2))) {\r\n            this.onSubmitDataDlg(true);\r\n        }\r\n        else {\r\n            this.onSubmitData(true);\r\n        }\r\n    }\r\n    parentid_onChange(evt: any) {\r\n        let e = evt.value;\r\n    }\r\n\r\n    edit_bomenumasters() {\r\n        this.showview = false;\r\n        setTimeout(() => {\r\n        });\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    async PopulateScreen(pkcol: any) {\r\n        this.spinner.show();\r\n        this.bomenumaster_service.get_bomenumasters_ByEID(pkcol).then(res => {\r\n            this.spinner.hide();\r\n\r\n            this.formData = res.bomenumaster;\r\n            let formproperty = res.bomenumaster.formproperty;\r\n            if (formproperty && formproperty.edit == false) this.showview = true;\r\n            this.pkcol = res.bomenumaster.pkcol;\r\n            this.formid = res.bomenumaster.menuid;\r\n            this.FillData(res);\r\n        }).catch((err) => { console.log(err); });\r\n    }\r\n\r\n    FillData(res: any) {\r\n        this.formData = res.bomenumaster;\r\n        this.formid = res.bomenumaster.menuid;\r\n        this.pkcol = res.bomenumaster.pkcol;\r\n        this.bmyrecord = false;\r\n        if ((res.bomenumaster as any).applicantid == this.sessionService.getItem('applicantid')) this.bmyrecord = true;\r\n        console.log(res);\r\n        //console.log(res.order);\r\n        //console.log(res.orderDetails);\r\n        this.bomenumaster_Form.patchValue({\r\n            menuid: res.bomenumaster.menuid,\r\n            menucode: res.bomenumaster.menucode,\r\n            menudescription: res.bomenumaster.menudescription,\r\n            menuurl: res.bomenumaster.menuurl,\r\n            actionkey: res.bomenumaster.actionkey,\r\n            iconname: res.bomenumaster.iconname,\r\n            helpurl: res.bomenumaster.helpurl,\r\n            helptext: res.bomenumaster.helptext,\r\n            parentid: res.bomenumaster.parentid,\r\n            parentiddesc: res.bomenumaster.parentiddesc,\r\n            orderno: res.bomenumaster.orderno,\r\n            action: res.bomenumaster.action,\r\n            showcheckbox: res.bomenumaster.showcheckbox,\r\n            showstatus: res.bomenumaster.showstatus,\r\n            checkboxcolumn: res.bomenumaster.checkboxcolumn,\r\n            nonew: res.bomenumaster.nonew,\r\n            noedit: res.bomenumaster.noedit,\r\n            nodelete: res.bomenumaster.nodelete,\r\n            wherecondition: res.bomenumaster.wherecondition,\r\n            status: res.bomenumaster.status,\r\n            statusdesc: res.bomenumaster.statusdesc,\r\n        });\r\n        this.bomenumaster_menuactions = res.bomenumaster_menuactions;\r\n        this.bomenuaction_menuactions = res.bomenuaction_menuactions;\r\n        this.bomenuactions_visiblelist = res.bomenuactions_visiblelist;\r\n        //Child Tables if any\r\n        this.Set_bomenuactions_TableConfig();\r\n        this.bomenuactions_LoadTable(res.bomenuactions);\r\n    }\r\n\r\n    validate() {\r\n        let ret = true;\r\n        return ret;\r\n    }\r\n\r\n    getHtml(html: any) {\r\n        let ret = \"\";\r\n        ret = html;\r\n        for (let key in this.bomenumaster_Form.controls) {\r\n            let val = this.bomenumaster_Form.controls[key].value;\r\n            if (val == 'null' || val == null || val == undefined) val = '';\r\n            if (this.bomenumaster_Form.controls[key] != null) {\r\n                if (false) {\r\n                    if (this.formData != null && this.formData[key] != null && this.formData[key] != '[]' && this.formData[key] != undefined && this.formData[key].length > 0) ret = ret.replace(new RegExp('##' + key + '##', 'g'), AppConstants.AttachmentURL + JSON.parse(this.formData[key])[0][\"name\"]);\r\n                }\r\n                else if (false) {\r\n                    if (this.formData != null && this.formData[key] != null && this.formData[key] != undefined) ret = ret.replace(new RegExp('##' + key + '##', 'g'), \"<div class='Stars' style='--rating:\" + this.formData[key] + \"></div>\");\r\n                }\r\n                else if (false) {\r\n                    if (this.formData != null && this.formData[key] != null && this.formData[key] != undefined) ret = ret.replace(new RegExp('##' + key + '##', 'g'), \"<div class='progress--circle progress--\" + this.formData[key] + \"'><div class='progress__number'>\" + this.formData[key] + \"%</div></div>\");\r\n                }\r\n                else\r\n                    ret = ret.replace(new RegExp('##' + key + '##', 'g'), val);\r\n            }\r\n        }\r\n        var re = /##(\\w+)##/g;\r\n        ret = ret.replace(re, '');\r\n        return ret;\r\n    }\r\n\r\n    async onSubmitDataDlg(bclear: any) {\r\n        this.isSubmitted = true;\r\n        if (!this.bomenumaster_Form.valid) {\r\n            this.toastr.addSingle(\"error\", \"\", \"Enter the required fields\");\r\n            return;\r\n        }\r\n        var obj = this.bomenumaster_Form.getRawValue();\r\n        console.log(obj);\r\n        if (!confirm('Do you want to want to save?')) {\r\n            return;\r\n        }\r\n        this.objvalues.push(obj);\r\n        this.dialogRef.close(this.objvalues);\r\n        setTimeout(() => {\r\n            //this.dialogRef.destroy();\r\n        }, 200);\r\n    }\r\n\r\n    //This has to come from bomenuactions & procedures\r\n    afterAction(mode: any) {\r\n        let formname = \"\";\r\n        let query = \"\";\r\n        if (mode == \"new\")\r\n            this.router.navigate(['/home/' + formname + '/' + formname + query]);\r\n        else if (mode == \"refresh\")\r\n            this.router.navigate(['/home/' + formname + '/' + formname + '/edit/' + this.formid + query]);\r\n    }\r\n\r\n\r\n\r\n    async onSubmitData(bclear: any) {\r\n        debugger;\r\n        this.isSubmitted = true;\r\n        let strError = \"\";\r\n        // Object.keys(this.bomenumaster_Form.controls).forEach(key => {\r\n        //     const controlErrors: ValidationErrors = this.bomenumaster_Form.get(key).errors;\r\n        //     if (controlErrors != null) {\r\n        //         Object.keys(controlErrors).forEach(keyError => {\r\n        //             strError += 'control: ' + key + ', Error: ' + keyError + '<BR>';\r\n        //         });\r\n        //     }\r\n        // });\r\n        if (strError != \"\") return this.sharedService.alert(strError);\r\n\r\n\r\n        if (!this.bomenumaster_Form.valid) {\r\n            this.toastr.addSingle(\"error\", \"\", \"Enter the required fields\");\r\n            return;\r\n        }\r\n        if (!this.validate()) {\r\n            return;\r\n        }\r\n        this.formData = this.bomenumaster_Form.getRawValue();\r\n        if (this.dynamicconfig.data != null) {\r\n            for (let key in this.dynamicconfig.data) {\r\n                if (key != 'visiblelist' && key != 'hidelist') {\r\n                    if (this.bomenumaster_Form.controls[key] != null) {\r\n                        this.formData[key] = this.bomenumaster_Form.controls[key].value;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.formData.Deleted_bomenuaction_IDs = this.Deleted_bomenuaction_IDs;\r\n        console.log(this.formData);\r\n        this.spinner.show();\r\n        this.bomenumaster_service.saveOrUpdate_bomenumasters(this.formData, this.tbl_bomenuactions?.source?.data,).subscribe(\r\n            async res => {\r\n                if (this.tbl_bomenuactions.source) {\r\n                    for (let i = 0; i < this.tbl_bomenuactions.source.data.length; i++) {\r\n                        if (this.tbl_bomenuactions.source.data[i].fileAttachmentList) await this.sharedService.upload(this.tbl_bomenuactions.source.data[i].fileAttachmentList);\r\n                    }\r\n                }\r\n                this.spinner.hide();\r\n                debugger;\r\n                this.toastr.addSingle(\"success\", \"\", \"Successfully saved\");\r\n                this.objvalues.push((res as any).bomenumaster);\r\n                if (!bclear) this.showview = true;\r\n                if (document.getElementById(\"contentAreascroll\") != undefined) document.getElementById(\"contentAreascroll\").scrollTop = 0;\r\n                if (!bclear && this.maindata != null && (this.maindata.ScreenType == 1 || this.maindata.ScreenType == 2)) {\r\n                    this.dialogRef.close(this.objvalues);\r\n                    return;\r\n                }\r\n                else {\r\n                    if (document.getElementById(\"contentAreascroll\") != undefined) document.getElementById(\"contentAreascroll\").scrollTop = 0;\r\n                }\r\n                this.clearList();\r\n                if (bclear) {\r\n                    this.resetForm();\r\n                }\r\n                else {\r\n                    if (this.maindata != null && (this.maindata.ScreenType == 1 || this.maindata.ScreenType == 2)) {\r\n                        this.objvalues.push((res as any).bomenumaster);\r\n                        this.dialogRef.close(this.objvalues);\r\n                    }\r\n                    else {\r\n                        this.FillData(res);\r\n                    }\r\n                }\r\n                this.bomenumaster_Form.markAsUntouched();\r\n                this.bomenumaster_Form.markAsPristine();\r\n            },\r\n            err => {\r\n                debugger;\r\n                this.spinner.hide();\r\n                this.toastr.addSingle(\"error\", \"\", err.error);\r\n                console.log(err);\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    //dropdown edit from the screen itself -> One screen like Reportviewer\r\n    clearList() {\r\n        this.tbl_bomenuactions.source = new LocalDataSource();\r\n    }\r\n\r\n    AddOrEdit_bomenuaction(event: any, actionid: any, menuid: any) {\r\n        let add = false;\r\n        if (event == null) add = true;\r\n        let childsave = false;\r\n        if (this.pkcol != undefined && this.pkcol != null) childsave = true;\r\n        this.dialog.open(bomenuactionComponent,\r\n            {\r\n                data: { showview: false, save: childsave, maindatapkcol: this.pkcol, event, actionid, menuid, visiblelist: this.bomenuactions_visiblelist, hidelist: this.bomenuactions_hidelist, ScreenType: 2 },\r\n            }\r\n        ).onClose.subscribe(res => {\r\n            if (res) {\r\n                if (add) {\r\n                    for (let i = 0; i < res.length; i++) {\r\n                        this.tbl_bomenuactions.source.add(res[i]);\r\n                    }\r\n                    this.tbl_bomenuactions.source.refresh();\r\n                }\r\n                else {\r\n                    this.tbl_bomenuactions.source.update(event.data, res[0]);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    onDelete_bomenuaction(event: any, childID: number, i: number) {\r\n        if (childID != null)\r\n            this.Deleted_bomenuaction_IDs += childID + \",\";\r\n        this.tbl_bomenuactions.source.splice(i, 1);\r\n        //this.updateGrandTotal();\r\n    }\r\n\r\n\r\n    PrevForm() {\r\n        let formid = this.sessionService.getItem(\"key\");\r\n        let prevform = this.sessionService.getItem(\"prevform\");\r\n        this.router.navigate([\"/home/\" + prevform + \"/\" + prevform + \"/edit/\" + formid]);\r\n    }\r\n    //start of Grid Codes bomenuactions\r\n    bomenuactions_settings: any;\r\n\r\n    show_bomenuactions_Checkbox() {\r\n        debugger;\r\n        if (this.tbl_bomenuactions.source.settings['selectMode'] == 'multi') this.tbl_bomenuactions.source.settings['selectMode'] = 'single';\r\n        else\r\n            this.tbl_bomenuactions.source.settings['selectMode'] = 'multi';\r\n        this.tbl_bomenuactions.source.initGrid();\r\n    }\r\n    delete_bomenuactions_All() {\r\n        this.tbl_bomenuactions.source.settings['selectMode'] = 'single';\r\n    }\r\n    show_bomenuactions_Filter() {\r\n        setTimeout(() => {\r\n            //  this.Set_bomenuactions_TableDropDownConfig();\r\n        });\r\n        if (this.tbl_bomenuactions.source.settings != null) this.tbl_bomenuactions.source.settings['hideSubHeader'] = !this.tbl_bomenuactions.source.settings['hideSubHeader'];\r\n        this.tbl_bomenuactions.source.initGrid();\r\n    }\r\n    show_bomenuactions_InActive() {\r\n    }\r\n    enable_bomenuactions_InActive() {\r\n    }\r\n    async Set_bomenuactions_TableDropDownConfig(res) {\r\n        if (!this.bfilterPopulate_bomenuactions) {\r\n\r\n            var clone = this.sharedService.clone(this.tbl_bomenuactions.source.settings);\r\n            if (clone.columns['rowselecttype'] != undefined) clone.columns['rowselecttype'].filter = { type: 'list', config: { selectText: 'Select...', list: JSON.parse(JSON.stringify(res.list_bomenuactions_rowselecttype.value)), }, };\r\n            if (clone.columns['rowselecttype'] != undefined) clone.columns['rowselecttype'].editor = { type: 'list', config: { selectText: 'Select...', list: JSON.parse(JSON.stringify(res.list_bomenuactions_rowselecttype.value)), }, };\r\n            this.tbl_bomenuactions.source.settings = clone;\r\n            this.tbl_bomenuactions.source.initGrid();\r\n\r\n            var clone = this.sharedService.clone(this.tbl_bomenuactions.source.settings);\r\n            if (clone.columns['actiontype'] != undefined) clone.columns['actiontype'].filter = { type: 'list', config: { selectText: 'Select...', list: JSON.parse(JSON.stringify(res.list_bomenuactions_actiontype.value)), }, };\r\n            if (clone.columns['actiontype'] != undefined) clone.columns['actiontype'].editor = { type: 'list', config: { selectText: 'Select...', list: JSON.parse(JSON.stringify(res.list_bomenuactions_actiontype.value)), }, };\r\n            this.tbl_bomenuactions.source.settings = clone;\r\n            this.tbl_bomenuactions.source.initGrid();\r\n        }\r\n        this.bfilterPopulate_bomenuactions = true;\r\n    }\r\n    async bomenuactions_beforesave(event: any) {\r\n        event.confirm.resolve(event.newData);\r\n\r\n\r\n\r\n    }\r\n    Set_bomenuactions_TableConfig() {\r\n        this.bomenuactions_settings = {\r\n            hideSubHeader: true,\r\n            mode: 'external',\r\n            selectMode: 'single',\r\n            actions: {\r\n                columnTitle: '',\r\n                width: '300px',\r\n                add: !this.showview,\r\n                edit: true, // true,\r\n                delete: !this.showview,\r\n                position: 'left',\r\n                custom: this.bomenuaction_menuactions\r\n            },\r\n            add: {\r\n                addButtonContent: '<i class=\"nb-plus\"></i>',\r\n                createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n                cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n                confirmCreate: true,\r\n            },\r\n            edit: {\r\n                editButtonContent: '<i class=\"nb-edit\"></i>',\r\n                saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n                cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n                confirmSave: true,\r\n            },\r\n            delete: {\r\n                deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n                confirmDelete: true,\r\n            },\r\n            columns: {\r\n                description: {\r\n                    title: 'Description',\r\n                    type: '',\r\n                    filter: true,\r\n                },\r\n                rowselecttypedesc: {\r\n                    title: 'Row Select Type',\r\n                    type: 'html',\r\n                    filter: true,\r\n                },\r\n                actionicon: {\r\n                    title: 'Action Icon',\r\n                    type: '',\r\n                    filter: true,\r\n                },\r\n                actiontypedesc: {\r\n                    title: 'Action Type',\r\n                    type: 'html',\r\n                    filter: true,\r\n                },\r\n                servicename: {\r\n                    title: 'Service Name',\r\n                    type: '',\r\n                    filter: true,\r\n                },\r\n                actionname: {\r\n                    title: 'Action Name',\r\n                    type: '',\r\n                    filter: true,\r\n                },\r\n                actioncondition: {\r\n                    title: 'Action Condition',\r\n                    type: '',\r\n                    filter: true,\r\n                },\r\n                actionbutton: {\r\n                    title: 'Action Button',\r\n                    type: 'boolean',\r\n                    editor: {\r\n                        type: 'checkbox',\r\n                        config: {\r\n                            true: 'true',\r\n                            false: 'false',\r\n                            resetText: 'clear',\r\n                        },\r\n                    },\r\n                    filter: {\r\n                        type: 'checkbox',\r\n                        config: {\r\n                            true: 'true',\r\n                            false: 'false',\r\n                            resetText: 'clear',\r\n                        },\r\n                    },\r\n                },\r\n                actionbuttonlocation: {\r\n                    title: 'Action Button Location',\r\n                    type: '',\r\n                    filter: true,\r\n                },\r\n                actionhelp: {\r\n                    title: 'Action Help',\r\n                    type: 'html',\r\n                    filter: true,\r\n                    editor: {\r\n                        type: 'textarea',\r\n                    },\r\n                },\r\n                actionrequestorfield: {\r\n                    title: 'Action Requestor Field',\r\n                    type: '',\r\n                    filter: true,\r\n                },\r\n                actionassigneduserfield: {\r\n                    title: 'Action Assigned User Field',\r\n                    type: '',\r\n                    filter: true,\r\n                },\r\n                notificationtext: {\r\n                    title: 'Notification Text',\r\n                    type: 'html',\r\n                    filter: true,\r\n                    editor: {\r\n                        type: 'textarea',\r\n                    },\r\n                },\r\n                actionrequestoremailfield: {\r\n                    title: 'Action Requestor Email Field',\r\n                    type: '',\r\n                    filter: true,\r\n                },\r\n                actionassigneduseremailfield: {\r\n                    title: 'Action Assigned User Email Field',\r\n                    type: '',\r\n                    filter: true,\r\n                },\r\n                actionstatus: {\r\n                    title: 'Action Status',\r\n                    type: '',\r\n                    filter: true,\r\n                },\r\n            },\r\n        };\r\n    }\r\n    bomenuactions_LoadTable(bomenuactions = new LocalDataSource()) {\r\n        if (this.ShowTableslist == null || this.ShowTableslist.length == 0 || this.ShowTableslist.indexOf(this.bomenuactions_ID) >= 0) {\r\n            if (this.tbl_bomenuactions != undefined) this.tbl_bomenuactions.source = new LocalDataSource();\r\n            if (this.tbl_bomenuactions != undefined) this.tbl_bomenuactions.source.load(bomenuactions as any as LocalDataSource);\r\n            if (this.tbl_bomenuactions != undefined) this.tbl_bomenuactions.source.setPaging(1, 20, true);\r\n        }\r\n    }\r\n\r\n    //external to inline\r\n    /*\r\n    bomenuactions_route(event:any,action:any) {\r\n    switch ( action) {\r\n    case 'create':\r\n    if (this.bomenumaster_service.bomenuactions.length == 0)\r\n    {\r\n        this.tbl_bomenuactions.source.grid.createFormShown = true;\r\n    }\r\n    else\r\n    {\r\n        let obj = new bomenuaction();\r\n        this.bomenumaster_service.bomenuactions.push(obj);\r\n        this.tbl_bomenuactions.source.refresh();\r\n        if ((this.bomenumaster_service.bomenuactions.length / this.tbl_bomenuactions.source.getPaging().perPage).toFixed(0) + 1 != this.tbl_bomenuactions.source.getPaging().page)\r\n        {\r\n            this.tbl_bomenuactions.source.setPage((this.bomenumaster_service.bomenuactions.length / this.tbl_bomenuactions.source.getPaging().perPage).toFixed(0) + 1);\r\n        }\r\n        setTimeout(() => {\r\n            this.tbl_bomenuactions.source.grid.edit(this.tbl_bomenuactions.source.grid.getLastRow());\r\n        });\r\n    }\r\n    break;\r\n    case 'delete':\r\n    let index = this.tbl_bomenuactions.source.data.indexOf(event.data);\r\n    this.onDelete_bomenuaction(event,event.data.actionid,((this.tbl_bomenuactions.source.getPaging().page-1) *this.tbl_bomenuactions.source.getPaging().perPage)+index);\r\n    this.tbl_bomenuactions.source.refresh();\r\n    break;\r\n    }\r\n    }\r\n    \r\n    */\r\n    bomenuactions_route(event: any, action: any) {\r\n        var addparam = \"\";\r\n        if (this.currentRoute.snapshot.paramMap.get('tableid') != null) {\r\n            addparam = \"/show/\" + this.currentRoute.snapshot.paramMap.get('tableid');\r\n        }\r\n\r\n        switch (action) {\r\n            case 'create':\r\n                this.AddOrEdit_bomenuaction(event, null, this.formid);\r\n                break;\r\n            case 'view':\r\n                break;\r\n            case 'edit':\r\n                this.AddOrEdit_bomenuaction(event, event.data.actionid, this.formid);\r\n                break;\r\n            case 'delete':\r\n                this.onDelete_bomenuaction(event, event.data.actionid, ((this.tbl_bomenuactions.source.getPaging().page - 1) * this.tbl_bomenuactions.source.getPaging().perPage) + event.index);\r\n                this.tbl_bomenuactions.source.refresh();\r\n                break;\r\n        }\r\n    }\r\n    bomenuactions_onDelete(obj) {\r\n        let actionid = obj.data.actionid;\r\n        if (confirm('Are you sure to delete this record ?')) {\r\n            this.bomenumaster_service.delete_bomenumaster(actionid).then(res =>\r\n                this.bomenuactions_LoadTable()\r\n            );\r\n        }\r\n    }\r\n    async onCustom_bomenuactions_Action(event: any) {\r\n        let objbomenuaction = await this.sharedService.onCustomAction(event, \"bomenuactions\");\r\n        let formname = (objbomenuaction as any).actionname;\r\n\r\n\r\n\r\n\r\n    }\r\n    bomenuactions_Paging(val) {\r\n        debugger;\r\n        this.tbl_bomenuactions.source.setPaging(1, val, true);\r\n    }\r\n\r\n    handle_bomenuactions_GridSelected(event: any) {\r\n        this.bomenuactions_selectedindex = this.tbl_bomenuactions.source.findIndex(i => i.actionid === event.data.actionid);\r\n    }\r\n    Is_bomenuactions_Visible() {\r\n        if (this.ShowTableslist == null || this.ShowTableslist.length == 0 || this.ShowTableslist.indexOf(this.bomenuactions_ID) >= 0) {\r\n            return \"tbl smart-table-container\";\r\n        }\r\n        else {\r\n            return \"hide\";\r\n        }\r\n    }\r\n    //end of Grid Codes bomenuactions\r\n\r\n}\r\n\r\n\r\n\r\n","export default \"<i class=\\\"fa fa-step-backward\\\" *ngIf=\\\"sourceKey\\\" (click)=\\\"nav.back()\\\"></i>\\r\\n<ngx-spinner></ngx-spinner>\\r\\n<form [formGroup]=\\\"bomenumaster_Form\\\" (ngSubmit)=\\\"onSubmit()\\\" [ngClass]=\\\"theme\\\">\\r\\n  <div class=\\\"row second\\\">\\r\\n    <h1 class=\\\"col-4 columns mainheader left\\\"><a href='#/home/{{p_currenturl}}'>{{'Menu Masters' | translate}}</a></h1>\\r\\n    <div class='col  sticky1 second' role='toolbar' aria-label='Toolbar with button groups'>\\r\\n      <!--btn-toolbar-->\\r\\n      <div class='col'></div>\\r\\n      <div class='dropdown d-inline-block btn-dropdown show'>\\r\\n\\r\\n        <ul class='nav nav-pills  input-group'>\\r\\n          <li><a class='alert-info' [routerLink]='' *ngIf='showview' (click)=\\\"edit_bomenumasters()\\\"><i\\r\\n                class=\\\"nb-edit\\\"></i>Edit</a></li>\\r\\n          <li class='nav-item actionheader col' *ngIf='maindata==null || maindata==undefined'>\\r\\n            <a [routerLink]='' (click)='first()'><i class='fa fa-fast-backward'\\r\\n                aria-hidden='true'></i></a>&nbsp;&nbsp;&nbsp;&nbsp;<a [routerLink]='' (click)='prev()'><i\\r\\n                class='fa fa-step-backward' aria-hidden='true'></i></a>&nbsp;&nbsp;\\r\\n            <app-popupselect [options]='pkList' [optionsEvent]='pkoptionsEvent' [form]='pkform'\\r\\n              (selectItem)='onSelectedpk($event)' [reportid]=31 [menuid]=31 formControlName='pk' id='pk' desc=''>\\r\\n            </app-popupselect>\\r\\n\\r\\n            <a [routerLink]='' (click)='next()'><i class='fa fa-step-forward' aria-hidden='true'></i></a>&nbsp;&nbsp; <a\\r\\n              [routerLink]='' (click)='last()'><i class='fa fa-fast-forward' aria-hidden='true'></i></a>\\r\\n\\r\\n          </li>\\r\\n          <li *ngIf='!showview && (maindata==null || maindata==undefined)' class='nav-item dropdown  actionheader'>\\r\\n            <ul class=\\\"nav navbar-nav1\\\">\\r\\n              <li *ngIf=' (maindata==null || maindata==undefined)' class=\\\"dropdown\\\">\\r\\n                <a [routerLink]='' class='dropdown-toggle' data-toggle='dropdown' role='button' aria-haspopup='true'\\r\\n                  aria-expanded='false'> <span class='caret'></span>Actions</a>\\r\\n                <ul class=\\\"dropdown-menu\\\">\\r\\n                  <li><a class='dropdown-item' *ngIf='ScreenType!=2' [routerLink]='' (click)='resetForm()'><i\\r\\n                        class='fa fa-plus' aria-hidden='true'></i>&nbsp;&nbsp;&nbsp;New</a></li>\\r\\n                  <li><a class='dropdown-item' [routerLink]='' (click)='onSubmit()'><i class='fa fa-save'\\r\\n                        aria-hidden='true'></i>&nbsp;&nbsp;&nbsp;Save</a></li>\\r\\n                  <li><a class='dropdown-item' [routerLink]='' (click)='onDelete()'><i class='fa fa-trash'\\r\\n                        aria-hidden='true'></i>&nbsp;&nbsp;&nbsp;Delete</a></li>\\r\\n\\r\\n                  <li role=\\\"separator\\\" class=\\\"divider\\\">\\r\\n                    <hr>\\r\\n                  </li>\\r\\n\\r\\n                  <li><a class='dropdown-item' [routerLink]='' (click)='onCopy()'><i class='fa fa-copy'\\r\\n                        aria-hidden='true'></i>&nbsp;&nbsp;&nbsp;Copy</a></li>\\r\\n                  <li><a class='dropdown-item' [routerLink]=''><i class='fa fa-clipboard'\\r\\n                        aria-hidden='true'></i>&nbsp;&nbsp;&nbsp;Clipboard</a></li>\\r\\n                  <li><a class='dropdown-item' [routerLink]=''><i class='fa fa-print'\\r\\n                        aria-hidden='true'></i>&nbsp;&nbsp;&nbsp;Print</a></li>\\r\\n                  <li><a class='dropdown-item' [routerLink]=''><i class='fa fa-envelope'\\r\\n                        aria-hidden='true'></i>&nbsp;&nbsp;&nbsp;Mail</a></li>\\r\\n\\r\\n\\r\\n                </ul>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </li>\\r\\n          <ng-container *ngFor=\\\"let action of bomenumaster_menuactions\\\">\\r\\n            <li><a class=\\\"alert-action\\\" [routerLink]='' (click)=\\\"onChangeAction(action.actionid)\\\"><i class=\\\"fa fa-new\\\"\\r\\n                  aria-hidden=\\\"true\\\"></i>&nbsp;&nbsp;&nbsp;{{action.description}}</a></li>\\r\\n          </ng-container>\\r\\n          <li class='nav-item actionheader' *ngIf=\\\"!showview\\\">\\r\\n            <a class=\\\"alert-success\\\" [routerLink]='' (click)=\\\"onSubmitAndWait()\\\"><i class=\\\"fa fa-database\\\"></i>\\r\\n              Submit</a>\\r\\n            <a class=\\\"alert-primary\\\" *ngIf='data.pkcol==null || maindata.ScreenType==null' [routerLink]=''\\r\\n              (click)=\\\"onSubmit()\\\"><i class=\\\"fa fa-share-square\\\"></i> Submit & Clear</a>\\r\\n            <app-action *ngIf=\\\"f.menuid.value != null\\\" (afterAction)=\\\"afterAction($event)\\\" [menuid]=\\\"p_menuid\\\"\\r\\n              [value]=\\\"f.menuid.value\\\" [status]=\\\"f.status.value\\\"></app-action>\\r\\n          </li>\\r\\n          <li class='nav-item actionheader'\\r\\n            *ngIf=\\\"maindata!=undefined && maindata!=null && (maindata.ScreenType==1 || maindata.ScreenType==2)\\\">\\r\\n            <a class=\\\"alert-danger\\\" [routerLink]='' (click)=\\\"onClose()\\\"><i class=\\\"fa fa-close\\\"></i> Close</a>\\r\\n          </li>\\r\\n\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"container\\\"\\r\\n    id=\\\"{{maindata ==undefined || maindata==null || maindata.ScreenType!=2?'contentAreascroll':'contentArea1'}}\\\">\\r\\n    <div class=\\\"w-5\\\" *ngIf=\\\"showFormType=='1'\\\" style=\\\"margin-top:10px!important\\\">\\r\\n      <div (click)=\\\"PrevForm()\\\"><i title=\\\"Form\\\" class=\\\"fa fa-file\\\"></i></div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"(viewHtml != '' && showview)\\\" [innerHTML]='getHtml(viewHtml)'>\\r\\n\\r\\n    </div>\\r\\n    <ngb-tabset class=\\\"tabset1\\\" [destroyOnHide]=\\\"false\\\">\\r\\n      <div *ngIf=\\\"(viewHtml != '' && showview)\\\" [innerHTML]='getHtml(viewHtml)'>\\r\\n\\r\\n      </div>\\r\\n      <ngb-tab>\\r\\n        <ng-template ngbTabTitle>\\r\\n          <div (click)=\\\"ToolBar(true)\\\">Master</div>\\r\\n        </ng-template>\\r\\n        <ng-template ngbTabContent>\\r\\n          <p-accordion [multiple]='true'>\\r\\n            <div *ngIf=\\\"(viewHtml == '' || !showview)\\\" class=\\\"form-group row\\\">\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('menucode') == -1) && (menucodevisible==undefined || menucodevisible==true))\\\"\\r\\n                style='' class=\\\"col-3 \\\">\\r\\n                <label for=\\\"menucode\\\" class=\\\"control-label\\\">Code</label>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.menucode?.value}}</label>\\r\\n                <input *ngIf=\\\"!showview\\\" id=\\\"menucode\\\" formControlName=\\\"menucode\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('menudescription') == -1) && (menudescriptionvisible==undefined || menudescriptionvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 \\\">\\r\\n                <label for=\\\"menudescription\\\" class=\\\"control-label required\\\">Menu Description</label>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.menudescription?.value}}</label>\\r\\n                <input *ngIf=\\\"!showview\\\" id=\\\"menudescription\\\" required formControlName=\\\"menudescription\\\"\\r\\n                  class=\\\"form-control\\\">\\r\\n                <app-field-error-display [displayError]=\\\"f.menudescription.errors?.required\\\"\\r\\n                  errorMsg=\\\"Enter {{'Menu Description' | translate}}\\\">\\r\\n                </app-field-error-display>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\"></div>\\r\\n              <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"(viewHtml == '' || !showview)\\\" class=\\\"form-group row\\\">\\r\\n              <div *ngIf=\\\"((hidelist.indexOf('menuurl') == -1) && (menuurlvisible==undefined || menuurlvisible==true))\\\"\\r\\n                style='width:1500px' class=\\\"col-12 \\\">\\r\\n                <label for=\\\"menuurl\\\" class=\\\"control-label\\\">Menu U R L</label>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.menuurl?.value}}</label>\\r\\n                <textarea autosize MinRows=\\\"10\\\" MaxRows=\\\"15\\\" onlyGrow=\\\"true\\\" *ngIf=\\\"!showview\\\" id=\\\"menuurl\\\"\\r\\n                  formControlName=\\\"menuurl\\\" class=\\\"form-control\\\">\\r\\n</textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"(viewHtml == '' || !showview)\\\" class=\\\"form-group row\\\">\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('actionkey') == -1) && (actionkeyvisible==undefined || actionkeyvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 \\\">\\r\\n                <label for=\\\"actionkey\\\" class=\\\"control-label\\\">Action Key</label>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.actionkey?.value}}</label>\\r\\n                <input *ngIf=\\\"!showview\\\" id=\\\"actionkey\\\" formControlName=\\\"actionkey\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('iconname') == -1) && (iconnamevisible==undefined || iconnamevisible==true))\\\"\\r\\n                style='' class=\\\"col-3 \\\">\\r\\n                <label for=\\\"iconname\\\" class=\\\"control-label\\\">Icon Name</label>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.iconname?.value}}</label>\\r\\n                <input *ngIf=\\\"!showview\\\" id=\\\"iconname\\\" formControlName=\\\"iconname\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n              <div class=\\\"col\\\"></div>\\r\\n              <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"(viewHtml == '' || !showview)\\\" class=\\\"form-group row\\\">\\r\\n              <div *ngIf=\\\"((hidelist.indexOf('helpurl') == -1) && (helpurlvisible==undefined || helpurlvisible==true))\\\"\\r\\n                style='width:1500px' class=\\\"col-12 \\\">\\r\\n                <label for=\\\"helpurl\\\" class=\\\"control-label\\\">Help U R L</label>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.helpurl?.value}}</label>\\r\\n                <textarea autosize MinRows=\\\"10\\\" MaxRows=\\\"15\\\" onlyGrow=\\\"true\\\" *ngIf=\\\"!showview\\\" id=\\\"helpurl\\\"\\r\\n                  formControlName=\\\"helpurl\\\" class=\\\"form-control\\\">\\r\\n</textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"(viewHtml == '' || !showview)\\\" class=\\\"form-group row\\\">\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('helptext') == -1) && (helptextvisible==undefined || helptextvisible==true))\\\"\\r\\n                style='width:1500px' class=\\\"col-12 \\\">\\r\\n                <label for=\\\"helptext\\\" class=\\\"control-label\\\">Help Text</label>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.helptext?.value}}</label>\\r\\n                <textarea autosize MinRows=\\\"10\\\" MaxRows=\\\"15\\\" onlyGrow=\\\"true\\\" *ngIf=\\\"!showview\\\" id=\\\"helptext\\\"\\r\\n                  formControlName=\\\"helptext\\\" class=\\\"form-control\\\">\\r\\n</textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <!--parentid-->\\r\\n\\r\\n            <div *ngIf=\\\"(viewHtml == '' || !showview)\\\" class=\\\"form-group row\\\">\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('parentid') == -1) && (parentidvisible==undefined || parentidvisible==true))\\\"\\r\\n                style='' class=\\\"col-3\\\"><label for=\\\"parentid\\\" class=\\\"control-label\\\"\\r\\n                  (click)=\\\"AddOrEdit_parentid(null)\\\">Parent</label>\\r\\n                <app-popupselect *ngIf=\\\"!showview\\\" [options]=\\\"parentid_List\\\" [optionsEvent]=\\\"parentid_optionsEvent\\\"\\r\\n                  [form]=\\\"bomenumaster\\\" (selectItem)=\\\"onSelected_parentid($event)\\\" [reportid]='opfp9' [menuid]='opfp9'\\r\\n                  formControlName=\\\"parentid\\\" id=\\\"value\\\" desc=\\\"label\\\"></app-popupselect>\\r\\n                <div class=\\\"input-group\\\">\\r\\n                </div>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.parentiddesc?.value}}</label>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"((hidelist.indexOf('orderno') == -1) && (ordernovisible==undefined || ordernovisible==true))\\\"\\r\\n                style='' class=\\\"col-3 \\\">\\r\\n                <label for=\\\"orderno\\\" class=\\\"control-label\\\">Order No</label>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.orderno?.value}}</label>\\r\\n                <input *ngIf=\\\"!showview\\\" id=\\\"orderno\\\" formControlName=\\\"orderno\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n              <div *ngIf=\\\"((hidelist.indexOf('action') == -1) && (actionvisible==undefined || actionvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 \\\">\\r\\n                <label for=\\\"action\\\" class=\\\"control-label\\\">Action</label>\\r\\n                <!-- <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.action?.value}}</label> -->\\r\\n                <input *ngIf=\\\"!showview\\\" id=\\\"action\\\" formControlName=\\\"action\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('showcheckbox') == -1) && (showcheckboxvisible==undefined || showcheckboxvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 \\\">\\r\\n                <div class=\\\"columnchk\\\">\\r\\n                  <label for=\\\"showcheckbox\\\" class=\\\"control-label\\\">Show Checkbox</label>\\r\\n                  <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.showcheckbox?.value}}</label>\\r\\n                  <input type=\\\"checkbox\\\" *ngIf=\\\"!showview\\\" id=\\\"showcheckbox\\\" formControlName=\\\"showcheckbox\\\"\\r\\n                    class=\\\"form-control\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"(viewHtml == '' || !showview)\\\" class=\\\"form-group row\\\">\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('showstatus') == -1) && (showstatusvisible==undefined || showstatusvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 \\\">\\r\\n                <label for=\\\"showstatus\\\" class=\\\"control-label\\\">Show Status</label>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.showstatus?.value}}</label>\\r\\n                <input *ngIf=\\\"!showview\\\" id=\\\"showstatus\\\" formControlName=\\\"showstatus\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('checkboxcolumn') == -1) && (checkboxcolumnvisible==undefined || checkboxcolumnvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 \\\">\\r\\n                <label for=\\\"checkboxcolumn\\\" class=\\\"control-label\\\">Checkbox Column</label>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.checkboxcolumn?.value}}</label>\\r\\n                <input *ngIf=\\\"!showview\\\" id=\\\"checkboxcolumn\\\" formControlName=\\\"checkboxcolumn\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n              <div *ngIf=\\\"((hidelist.indexOf('nonew') == -1) && (nonewvisible==undefined || nonewvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 \\\">\\r\\n                <div class=\\\"columnchk\\\">\\r\\n                  <label for=\\\"nonew\\\" class=\\\"control-label\\\">No New</label>\\r\\n                  <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.nonew?.value}}</label>\\r\\n                  <input type=\\\"checkbox\\\" *ngIf=\\\"!showview\\\" id=\\\"nonew\\\" formControlName=\\\"nonew\\\" class=\\\"form-control\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"((hidelist.indexOf('noedit') == -1) && (noeditvisible==undefined || noeditvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 \\\">\\r\\n                <div class=\\\"columnchk\\\">\\r\\n                  <label for=\\\"noedit\\\" class=\\\"control-label\\\">No Edit</label>\\r\\n                  <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.noedit?.value}}</label>\\r\\n                  <input type=\\\"checkbox\\\" *ngIf=\\\"!showview\\\" id=\\\"noedit\\\" formControlName=\\\"noedit\\\" class=\\\"form-control\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"(viewHtml == '' || !showview)\\\" class=\\\"form-group row\\\">\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('nodelete') == -1) && (nodeletevisible==undefined || nodeletevisible==true))\\\"\\r\\n                style='' class=\\\"col-3 \\\">\\r\\n                <div class=\\\"columnchk\\\">\\r\\n                  <label for=\\\"nodelete\\\" class=\\\"control-label\\\">No Delete</label>\\r\\n                  <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.nodelete?.value}}</label>\\r\\n                  <input type=\\\"checkbox\\\" *ngIf=\\\"!showview\\\" id=\\\"nodelete\\\" formControlName=\\\"nodelete\\\"\\r\\n                    class=\\\"form-control\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div\\r\\n                *ngIf=\\\"((hidelist.indexOf('wherecondition') == -1) && (whereconditionvisible==undefined || whereconditionvisible==true))\\\"\\r\\n                style='' class=\\\"col-3 \\\">\\r\\n                <label for=\\\"wherecondition\\\" class=\\\"control-label\\\">Where Condition</label>\\r\\n                <label *ngIf=\\\"showview\\\" class=\\\"labelview\\\">{{f.wherecondition?.value}}</label>\\r\\n                <input *ngIf=\\\"!showview\\\" id=\\\"wherecondition\\\" formControlName=\\\"wherecondition\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n              <div class=\\\"col\\\"></div>\\r\\n              <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n          </p-accordion>\\r\\n        </ng-template>\\r\\n      </ngb-tab>\\r\\n      <ngb-tab>\\r\\n        <ng-template ngbTabTitle>\\r\\n          <div (click)=\\\"ToolBar(false)\\\">Menu Actions</div>\\r\\n        </ng-template>\\r\\n        <ng-template ngbTabContent>\\r\\n          <p-accordion [multiple]='true'>\\r\\n            <!-- child table bomenuactions-->\\r\\n            <div [ngClass]=\\\"Is_bomenuactions_Visible()\\\">\\r\\n              <!--End-->\\r\\n              <h4 class=\\\"form-group sticky1  columns left\\\">{{'Menu Actions' | translate}}\\r\\n                <select class='child' id=\\\"bomenuactionsPagingdropdown\\\"\\r\\n                  (change)=\\\"bomenuactions_Paging($event.target.value)\\\" [value]='20'>\\r\\n                  <option value='20'>20</option>\\r\\n                  <option value='50'>50</option>\\r\\n                  <option value='100'>100</option>\\r\\n                </select>\\r\\n                <ul class=\\\"nav navbar-nav1\\\" style='display:none'>\\r\\n                  <li class=\\\"dropdown\\\">\\r\\n                    <a [routerLink]='' class='dropdown-toggle' data-toggle='dropdown' role='button' aria-haspopup='true'\\r\\n                      aria-expanded='false'> <span class='caret'></span></a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                      <li><a class=\\\"dropdown-item\\\" [routerLink]=''\\r\\n                          (click)=\\\"bomenuactiontoggleOption();bomenuactions_route(null, 'create')\\\"><i class=\\\"fa fa-plus\\\"\\r\\n                            aria-hidden=\\\"true\\\"></i>&nbsp;&nbsp;&nbsp;New</a></li>\\r\\n                      <li role=\\\"separator\\\" class=\\\"divider\\\">\\r\\n                        <hr>\\r\\n                      </li>\\r\\n                      <li><a class=\\\"dropdown-item\\\" [routerLink]='' (click)=\\\"showbomenuactionsFilter()\\\"><i\\r\\n                            class=\\\"fa fa-filter\\\" aria-hidden=\\\"true\\\"></i>&nbsp;&nbsp;&nbsp;Filter</a></li>\\r\\n                      <li><a class=\\\"dropdown-item\\\" [routerLink]=''><i class=\\\"fa fa-envelope\\\"\\r\\n                            aria-hidden=\\\"true\\\"></i>&nbsp;&nbsp;&nbsp;Mail</a></li>\\r\\n                    </ul>\\r\\n                  </li>\\r\\n                </ul>\\r\\n                <a class=\\\"rightside\\\" [routerLink]='' (click)=\\\"bomenuactions_route(null, 'create')\\\"><i\\r\\n                    class=\\\"fa fa-plus\\\"></i></a>\\r\\n              </h4>\\r\\n              <ng2-smart-table #tbl_bomenuactions (userRowSelect)=\\\"handle_bomenuactions_GridSelected($event)\\\"\\r\\n                [settings]=\\\"bomenuactions_settings\\\" (custom)=\\\"onCustom_bomenuactions_Action($event)\\\"\\r\\n                [source]=\\\"tbl_bomenuactions?.source?.data\\\" (delete)=\\\"bomenuactions_route($event,'delete')\\\"\\r\\n                (deleteConfirm)=\\\"bomenuactions_route($event,'delete')\\\" (create)=\\\"bomenuactions_route($event,'create')\\\"\\r\\n                (createConfirm)=\\\"bomenuactions_beforesave($event)\\\" (edit)=\\\"bomenuactions_route($event,'edit')\\\"\\r\\n                (editConfirm)=\\\"bomenuactions_beforesave($event)\\\">\\r\\n              </ng2-smart-table>\\r\\n            </div>\\r\\n            <!--End of child table bomenuactions-->\\r\\n          </p-accordion>\\r\\n        </ng-template>\\r\\n      </ngb-tab>\\r\\n    </ngb-tabset>\\r\\n  </div>\\r\\n</form>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}